using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace DBProject
{
    public partial class MainForm : Form
    {
        private EntryForm entryForm = new EntryForm();
        private DataClassesDataContext db = new DataClassesDataContext();
        private String searchField; // Filtro sul campo sul quale fare ricerca.
        private DataGridView destinationDataGridView; // DataGridView da fillare con il risultato della ricerca per filtro.
        private String tableName;

        public MainForm()
        {
            InitializeComponent();
        }

        private void Form1_Load(object sender, EventArgs e)
        {
            //Autogenerated code.
            #region DataSetAdapters
            /*
            this.giacenzaTableAdapter.Fill(this.progettoDB16DataSet.Giacenza);            
            this.ricambioTableAdapter.Fill(this.progettoDB16DataSet.Ricambio);           
            this.utilizzoTableAdapter.Fill(this.progettoDB16DataSet.utilizzo);            
            this.riparazioneTableAdapter.Fill(this.progettoDB16DataSet.Riparazione);            
            this.referenza2TableAdapter.Fill(this.progettoDB16DataSet.referenza2);            
            this.possessoTableAdapter.Fill(this.progettoDB16DataSet.possesso);            
            this.revisioneTableAdapter.Fill(this.progettoDB16DataSet.Revisione);            
            this.veicolo_vendutoTableAdapter.Fill(this.progettoDB16DataSet.Veicolo_venduto);            
            this.optionalTableAdapter.Fill(this.progettoDB16DataSet.Optional);
            this.modello_veicoloTableAdapter.Fill(this.progettoDB16DataSet.Modello_veicolo);
            this.veicolo_in_catalogoTableAdapter.Fill(this.progettoDB16DataSet.Veicolo_in_catalogo);
            this.diTableAdapter.Fill(this.progettoDB16DataSet.di);
            this.per2TableAdapter.Fill(this.progettoDB16DataSet.per2);
            this.ordineTableAdapter.Fill(this.progettoDB16DataSet.Ordine);
            this.nostre_modalita_di_pagamentoTableAdapter.Fill(this.progettoDB16DataSet.Nostre_modalita_di_pagamento);
            this.pagamento_cVenditaTableAdapter.Fill(this.progettoDB16DataSet.Pagamento_cVendita);
            this.contratto_di_venditaTableAdapter.Fill(this.progettoDB16DataSet.Contratto_di_vendita);

            this.clienteTableAdapter.Fill(this.progettoDB16DataSet.Cliente);
            fillCombo(this.comboBox8, this.progettoDB16DataSet.Cliente);

            this.trasportoTableAdapter.Fill(this.progettoDB16DataSet.Trasporto);
            this.corriereTableAdapter.Fill(this.progettoDB16DataSet.Corriere);
            this.modalita_di_pagamentoTableAdapter.Fill(this.progettoDB16DataSet.Modalita_di_pagamento);
            this.pagamento_cAcquistoTableAdapter.Fill(this.progettoDB16DataSet.Pagamento_cAcquisto);
            this.fattura_di_acquistoTableAdapter.Fill(this.progettoDB16DataSet.Fattura_di_acquisto);
            this.fornitoreTableAdapter.Fill(this.progettoDB16DataSet.Fornitore);
            */

            // Officina
            this.giacenzaTableAdapter.Fill(this.progettoDB16DataSet.Giacenza);
            fillCombo(this.comboBox22, this.progettoDB16DataSet.Giacenza);

            this.ricambioTableAdapter.Fill(this.progettoDB16DataSet.Ricambio);
            fillCombo(this.comboBox21, this.progettoDB16DataSet.Ricambio);

            this.utilizzoTableAdapter.Fill(this.progettoDB16DataSet.utilizzo);
            fillCombo(this.comboBox20, this.progettoDB16DataSet.utilizzo);

            this.riparazioneTableAdapter.Fill(this.progettoDB16DataSet.Riparazione);
            fillCombo(this.comboBox19, this.progettoDB16DataSet.Riparazione);


            // Veicoli
            this.referenza2TableAdapter.Fill(this.progettoDB16DataSet.referenza2);
            fillCombo(this.comboBox25, this.progettoDB16DataSet.referenza2);

            this.possessoTableAdapter.Fill(this.progettoDB16DataSet.possesso);
            fillCombo(this.comboBox18, this.progettoDB16DataSet.possesso);

            this.revisioneTableAdapter.Fill(this.progettoDB16DataSet.Revisione);
            fillCombo(this.comboBox17, this.progettoDB16DataSet.Revisione);

            this.veicolo_vendutoTableAdapter.Fill(this.progettoDB16DataSet.Veicolo_venduto);
            fillCombo(this.comboBox16, this.progettoDB16DataSet.Veicolo_venduto);

            this.optionalTableAdapter.Fill(this.progettoDB16DataSet.Optional);
            fillCombo(this.comboBox15, this.progettoDB16DataSet.Optional);

            this.modello_veicoloTableAdapter.Fill(this.progettoDB16DataSet.Modello_veicolo);
            fillCombo(this.comboBox11, this.progettoDB16DataSet.Modello_veicolo);

            this.veicolo_in_catalogoTableAdapter.Fill(this.progettoDB16DataSet.Veicolo_in_catalogo);
            fillCombo(this.comboBox14, this.progettoDB16DataSet.Veicolo_in_catalogo);


            // Ordine
            this.diTableAdapter.Fill(this.progettoDB16DataSet.di);
            fillCombo(this.comboBox23, this.progettoDB16DataSet.di);

            this.per2TableAdapter.Fill(this.progettoDB16DataSet.per2);
            fillCombo(this.comboBox13, this.progettoDB16DataSet.per2);

            this.ordineTableAdapter.Fill(this.progettoDB16DataSet.Ordine);
            fillCombo(this.comboBox12, this.progettoDB16DataSet.Ordine);


            // Clienti e contatti
            this.nostre_modalita_di_pagamentoTableAdapter.Fill(this.progettoDB16DataSet.Nostre_modalita_di_pagamento);
            fillCombo(this.comboBox10, this.progettoDB16DataSet.Nostre_modalita_di_pagamento);

            this.pagamento_cVenditaTableAdapter.Fill(this.progettoDB16DataSet.Pagamento_cVendita);
            fillCombo(this.comboBox9, this.progettoDB16DataSet.Pagamento_cVendita);

            this.contratto_di_venditaTableAdapter.Fill(this.progettoDB16DataSet.Contratto_di_vendita);
            fillCombo(this.comboBox24, this.progettoDB16DataSet.Contratto_di_vendita);

            this.clienteTableAdapter.Fill(this.progettoDB16DataSet.Cliente);
            fillCombo(this.comboBox8, this.progettoDB16DataSet.Cliente);


            // Corrieri
            this.trasportoTableAdapter.Fill(this.progettoDB16DataSet.Trasporto);
            fillCombo(this.comboBoxTrasporti, this.progettoDB16DataSet.Trasporto);

            this.corriereTableAdapter.Fill(this.progettoDB16DataSet.Corriere);
            fillCombo(this.comboBoxCorrieri, this.progettoDB16DataSet.Corriere);


            // Fornitori
            this.modalita_di_pagamentoTableAdapter.Fill(this.progettoDB16DataSet.Modalita_di_pagamento);
            fillCombo(this.comboBoxModPag, this.progettoDB16DataSet.Modalita_di_pagamento);

            this.pagamento_cAcquistoTableAdapter.Fill(this.progettoDB16DataSet.Pagamento_cAcquisto);
            fillCombo(this.comboBoxPagamenti, this.progettoDB16DataSet.Pagamento_cAcquisto);

            this.fattura_di_acquistoTableAdapter.Fill(this.progettoDB16DataSet.Fattura_di_acquisto);
            fillCombo(this.comboBoxFatture, this.progettoDB16DataSet.Fattura_di_acquisto);

            this.fornitoreTableAdapter.Fill(this.progettoDB16DataSet.Fornitore);
            fillCombo(this.comboBoxFornitore, this.progettoDB16DataSet.Fornitore);


            #endregion

            this.homePanel.BringToFront();
        }

        // Fill a combo with specified DataTable columns names.
        private void fillCombo(ComboBox combo, DataTable table)
        {
            List<String> columnsNames = new List<string>();
            columnsNames.Add("");
            foreach (DataColumn dc in table.Columns)
            {
                columnsNames.Add(dc.ColumnName);
            }

            combo.DataSource = columnsNames;
        }

        private void backToHome(object sender, EventArgs e)
        {
            this.homePanel.BringToFront();
        }

        private void homeBtns_Click(object sender, EventArgs e)
        {
            if (sender == this.fornitoriBtn)
                this.fornitoriPanel.BringToFront();
            else if (sender == this.clientiBtn)
                this.clientiPanel.BringToFront();
            else if (sender == this.officinaBtn)
                this.officinaPanel.BringToFront();
            else if (sender == this.corrieriBtn)
                this.corrieriPanel.BringToFront();
            else if (sender == this.veicoliBtn)
                this.veicoliPanel.BringToFront();
            else if (sender == this.ordiniBtn)
                this.ordiniPanel.BringToFront();
        }

        private void addInstanceBtn_Click(object sender, EventArgs e)
        {
            //temporanea
            this.entryForm.Dispose();
            this.entryForm = new EntryForm();
            //

            //EntryButton è un button custom indicante l'EntryForm da mostrare al click relativo.
            EntryButton senderBtn = (EntryButton) sender;
            this.entryForm.setMainPanel(senderBtn.EntryPanel);
            this.entryForm.Text = senderBtn.FormName;
            this.entryForm.ShowDialog();
        }
        


        // Methods for texBoxes used as search bar.
        #region searchBars

        private void textBox_TextChanged(object sender, EventArgs e)
        {
            String filter = ((TextBox)sender).Text;

            if (String.IsNullOrEmpty(searchField))
            {
                return;
            }

            Func<Object, bool> where = c =>
            {
                var field = c.GetType().GetProperty(searchField);
                if (String.IsNullOrEmpty(filter)) {
                    return true;
                }
                if (field != null)
                {
                    return field.GetValue(c).ToString().Contains(filter);
                }
                return false;
            };

            List<Object> query = null;

            Console.WriteLine(tableName);
            switch (tableName)
            {

                // Gestione Fornitori
                case "Fornitore":
                    query = db.Fornitore.Where(where).ToList();
                    break;
                case "Fattura":
                    query = db.Fattura_di_acquisto.Where(where).ToList();
                    break;
                case "Pagamento_fornitore":
                    query = db.Pagamento_cAcquisto.Where(where).ToList();
                    break;
                case "Modalita_pagamento_fornitore":
                    query = db.Modalita_di_pagamento.Where(where).ToList();
                    break;

                // Gestione Corrieri
                case "Corriere":
                    query = db.Corriere.Where(where).ToList();
                    break;
                case "Trasporto":
                    query = db.Trasporto.Where(where).ToList();
                    break;
                    
                // Gestione Clienti e Contratti
                case "Cliente":
                    query = db.Cliente.Where(where).ToList();
                    break;
                case "Contratto":
                    query = db.Contratto_di_vendita.Where(where).ToList();
                    break;
                case "Pagamento":
                    query = db.Pagamento_cVendita.Where(where).ToList();
                    break;
                case "Modalita_di_pagamento":
                    query = db.Nostre_modalita_di_pagamento.Where(where).ToList();
                    break;

                // Gestione Ordini
                case "Ordine":
                    query = db.Ordine.Where(where).ToList();
                    break;
                case "Dettaglio_ordine_veicolo":
                    query = db.per2.Where(where).ToList();
                    break;
                case "Dettaglio_ordine_ricambio":
                    query = db.di.Where(where).ToList();
                    break;

                // Gestione Veicolo
                case "Veicolo_in_catalogo":
                    query = db.Veicolo_in_catalogo.Where(where).ToList();
                    break;
                case "Modello_veicolo":
                    query = db.Modello_veicolo.Where(where).ToList();
                    break;
                case "Optional":
                    query = db.Optional.Where(where).ToList();
                    break;
                case "Veicolo_venduto":
                    query = db.Veicolo_venduto.Where(where).ToList();
                    break;
                case "Revisione":
                    query = db.Revisione.Where(where).ToList();
                    break;
                case "Optional_supportato":
                    query = db.referenza2.Where(where).ToList();
                    break;
                case "Optional_in_veicolo_venduto":
                    query = db.possesso.Where(where).ToList();
                    break;

                    // Gestione Officina
                case "Riparazione":
                    query = db.Riparazione.Where(where).ToList();
                    break;
                case "Dettaglio_riparazione":
                    query = db.utilizzo.Where(where).ToList();
                    break;
                case "Ricambio":
                    query = db.Ricambio.Where(where).ToList();
                    break;
                case "Giacenza":
                    query = db.Giacenza.Where(where).ToList();
                    break;
                case "Ricambio_veicolo":
                    query = db.referenza2.Where(where).ToList();
                    break;
            }
            
            destinationDataGridView.DataSource = query;
        }

        private void comboBoxSearchFieldChanged(object sender, EventArgs e)
        {
            searchField = ((ComboBox)sender).Text;
            searchField = String.IsNullOrEmpty(searchField) ? null : searchField.Replace(" ", "_");
        }
    
        private void tabControlSelectedIndexChanged(object sender, EventArgs e)
        {
            searchSetup(sender);
        }

        private void tabControl_Enter(object sender, EventArgs e)
        {
            searchSetup(sender);
        }

        private void searchSetup(Object sender)
        {
            searchField = null; // Resetto il field di ricerca.
            tableName = ((TabControl)sender).SelectedTab.Name;
            // Console.WriteLine(tableName);

            // Setto il DataGridView destinazione dei dati.
            destinationDataGridView = ((TabControl)sender).SelectedTab.Controls.OfType<DataGridView>().First();            
        }


        #endregion
    }
}
