#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Il codice è stato generato da uno strumento.
//     Versione runtime:4.0.30319.42000
//
//     Le modifiche apportate a questo file possono provocare un comportamento non corretto e andranno perse se
//     il codice viene rigenerato.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DBProject
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DBProject1617")]
	public partial class DataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definizioni metodo Extensibility
    partial void OnCreated();
    partial void InsertCliente(Cliente instance);
    partial void UpdateCliente(Cliente instance);
    partial void DeleteCliente(Cliente instance);
    partial void InsertContrattoVendita(ContrattoVendita instance);
    partial void UpdateContrattoVendita(ContrattoVendita instance);
    partial void DeleteContrattoVendita(ContrattoVendita instance);
    partial void InsertCorriere(Corriere instance);
    partial void UpdateCorriere(Corriere instance);
    partial void DeleteCorriere(Corriere instance);
    partial void InsertDotazione(Dotazione instance);
    partial void UpdateDotazione(Dotazione instance);
    partial void DeleteDotazione(Dotazione instance);
    partial void InsertFatturaAcquisto(FatturaAcquisto instance);
    partial void UpdateFatturaAcquisto(FatturaAcquisto instance);
    partial void DeleteFatturaAcquisto(FatturaAcquisto instance);
    partial void InsertFornitore(Fornitore instance);
    partial void UpdateFornitore(Fornitore instance);
    partial void DeleteFornitore(Fornitore instance);
    partial void InsertGiacenza(Giacenza instance);
    partial void UpdateGiacenza(Giacenza instance);
    partial void DeleteGiacenza(Giacenza instance);
    partial void InsertModalitàPagamento(ModalitàPagamento instance);
    partial void UpdateModalitàPagamento(ModalitàPagamento instance);
    partial void DeleteModalitàPagamento(ModalitàPagamento instance);
    partial void InsertModelloVeicolo(ModelloVeicolo instance);
    partial void UpdateModelloVeicolo(ModelloVeicolo instance);
    partial void DeleteModelloVeicolo(ModelloVeicolo instance);
    partial void InsertNostreModalitàPagamento(NostreModalitàPagamento instance);
    partial void UpdateNostreModalitàPagamento(NostreModalitàPagamento instance);
    partial void DeleteNostreModalitàPagamento(NostreModalitàPagamento instance);
    partial void InsertOptional(Optional instance);
    partial void UpdateOptional(Optional instance);
    partial void DeleteOptional(Optional instance);
    partial void InsertOrdine(Ordine instance);
    partial void UpdateOrdine(Ordine instance);
    partial void DeleteOrdine(Ordine instance);
    partial void InsertOrdineRicambio(OrdineRicambio instance);
    partial void UpdateOrdineRicambio(OrdineRicambio instance);
    partial void DeleteOrdineRicambio(OrdineRicambio instance);
    partial void InsertOrdineVeicolo(OrdineVeicolo instance);
    partial void UpdateOrdineVeicolo(OrdineVeicolo instance);
    partial void DeleteOrdineVeicolo(OrdineVeicolo instance);
    partial void InsertRata(Rata instance);
    partial void UpdateRata(Rata instance);
    partial void DeleteRata(Rata instance);
    partial void InsertRataCliente(RataCliente instance);
    partial void UpdateRataCliente(RataCliente instance);
    partial void DeleteRataCliente(RataCliente instance);
    partial void InsertReferenza(Referenza instance);
    partial void UpdateReferenza(Referenza instance);
    partial void DeleteReferenza(Referenza instance);
    partial void InsertRevisione(Revisione instance);
    partial void UpdateRevisione(Revisione instance);
    partial void DeleteRevisione(Revisione instance);
    partial void InsertRicambio(Ricambio instance);
    partial void UpdateRicambio(Ricambio instance);
    partial void DeleteRicambio(Ricambio instance);
    partial void InsertRiparazione(Riparazione instance);
    partial void UpdateRiparazione(Riparazione instance);
    partial void DeleteRiparazione(Riparazione instance);
    partial void InsertSupporto(Supporto instance);
    partial void UpdateSupporto(Supporto instance);
    partial void DeleteSupporto(Supporto instance);
    partial void InsertTrasporto(Trasporto instance);
    partial void UpdateTrasporto(Trasporto instance);
    partial void DeleteTrasporto(Trasporto instance);
    partial void InsertUtilizzo(Utilizzo instance);
    partial void UpdateUtilizzo(Utilizzo instance);
    partial void DeleteUtilizzo(Utilizzo instance);
    partial void InsertVeicoloCatalogo(VeicoloCatalogo instance);
    partial void UpdateVeicoloCatalogo(VeicoloCatalogo instance);
    partial void DeleteVeicoloCatalogo(VeicoloCatalogo instance);
    partial void InsertVeicoloVenduto(VeicoloVenduto instance);
    partial void UpdateVeicoloVenduto(VeicoloVenduto instance);
    partial void DeleteVeicoloVenduto(VeicoloVenduto instance);
    #endregion
		
		public DataClassesDataContext() : 
				base(global::DBProject.Properties.Settings.Default.DBProject1617ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Cliente> Cliente
		{
			get
			{
				return this.GetTable<Cliente>();
			}
		}
		
		public System.Data.Linq.Table<ContrattoVendita> ContrattoVendita
		{
			get
			{
				return this.GetTable<ContrattoVendita>();
			}
		}
		
		public System.Data.Linq.Table<Corriere> Corriere
		{
			get
			{
				return this.GetTable<Corriere>();
			}
		}
		
		public System.Data.Linq.Table<Dotazione> Dotazione
		{
			get
			{
				return this.GetTable<Dotazione>();
			}
		}
		
		public System.Data.Linq.Table<FatturaAcquisto> FatturaAcquisto
		{
			get
			{
				return this.GetTable<FatturaAcquisto>();
			}
		}
		
		public System.Data.Linq.Table<Fornitore> Fornitore
		{
			get
			{
				return this.GetTable<Fornitore>();
			}
		}
		
		public System.Data.Linq.Table<Giacenza> Giacenza
		{
			get
			{
				return this.GetTable<Giacenza>();
			}
		}
		
		public System.Data.Linq.Table<ModalitàPagamento> ModalitàPagamento
		{
			get
			{
				return this.GetTable<ModalitàPagamento>();
			}
		}
		
		public System.Data.Linq.Table<ModelloVeicolo> ModelloVeicolo
		{
			get
			{
				return this.GetTable<ModelloVeicolo>();
			}
		}
		
		public System.Data.Linq.Table<NostreModalitàPagamento> NostreModalitàPagamento
		{
			get
			{
				return this.GetTable<NostreModalitàPagamento>();
			}
		}
		
		public System.Data.Linq.Table<Optional> Optional
		{
			get
			{
				return this.GetTable<Optional>();
			}
		}
		
		public System.Data.Linq.Table<Ordine> Ordine
		{
			get
			{
				return this.GetTable<Ordine>();
			}
		}
		
		public System.Data.Linq.Table<OrdineRicambio> OrdineRicambio
		{
			get
			{
				return this.GetTable<OrdineRicambio>();
			}
		}
		
		public System.Data.Linq.Table<OrdineVeicolo> OrdineVeicolo
		{
			get
			{
				return this.GetTable<OrdineVeicolo>();
			}
		}
		
		public System.Data.Linq.Table<Rata> Rata
		{
			get
			{
				return this.GetTable<Rata>();
			}
		}
		
		public System.Data.Linq.Table<RataCliente> RataCliente
		{
			get
			{
				return this.GetTable<RataCliente>();
			}
		}
		
		public System.Data.Linq.Table<Referenza> Referenza
		{
			get
			{
				return this.GetTable<Referenza>();
			}
		}
		
		public System.Data.Linq.Table<Revisione> Revisione
		{
			get
			{
				return this.GetTable<Revisione>();
			}
		}
		
		public System.Data.Linq.Table<Ricambio> Ricambio
		{
			get
			{
				return this.GetTable<Ricambio>();
			}
		}
		
		public System.Data.Linq.Table<Riparazione> Riparazione
		{
			get
			{
				return this.GetTable<Riparazione>();
			}
		}
		
		public System.Data.Linq.Table<Supporto> Supporto
		{
			get
			{
				return this.GetTable<Supporto>();
			}
		}
		
		public System.Data.Linq.Table<Trasporto> Trasporto
		{
			get
			{
				return this.GetTable<Trasporto>();
			}
		}
		
		public System.Data.Linq.Table<Utilizzo> Utilizzo
		{
			get
			{
				return this.GetTable<Utilizzo>();
			}
		}
		
		public System.Data.Linq.Table<VeicoloCatalogo> VeicoloCatalogo
		{
			get
			{
				return this.GetTable<VeicoloCatalogo>();
			}
		}
		
		public System.Data.Linq.Table<VeicoloVenduto> VeicoloVenduto
		{
			get
			{
				return this.GetTable<VeicoloVenduto>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Cliente")]
	public partial class Cliente : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _Id;
		
		private char _TipoCliente;
		
		private string _CodiceFiscale;
		
		private string _Nome;
		
		private string _Cognome;
		
		private System.Nullable<System.DateTime> _DataNascita;
		
		private string _CittàNascita;
		
		private string _ProvinciaNascita;
		
		private string _PartitaIVA;
		
		private string _RagioneSociale;
		
		private string _Recapito1;
		
		private System.Nullable<char> _Recapito2;
		
		private string _IndirizzoEmail1;
		
		private System.Nullable<char> _IndirizzoEmail2;
		
		private string _Indirizzo;
		
		private string _Città;
		
		private string _Provincia;
		
		private string _CAP;
		
		private EntitySet<ContrattoVendita> _ContrattoVendita;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(decimal value);
    partial void OnIdChanged();
    partial void OnTipoClienteChanging(char value);
    partial void OnTipoClienteChanged();
    partial void OnCodiceFiscaleChanging(string value);
    partial void OnCodiceFiscaleChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnCognomeChanging(string value);
    partial void OnCognomeChanged();
    partial void OnDataNascitaChanging(System.Nullable<System.DateTime> value);
    partial void OnDataNascitaChanged();
    partial void OnCittàNascitaChanging(string value);
    partial void OnCittàNascitaChanged();
    partial void OnProvinciaNascitaChanging(string value);
    partial void OnProvinciaNascitaChanged();
    partial void OnPartitaIVAChanging(string value);
    partial void OnPartitaIVAChanged();
    partial void OnRagioneSocialeChanging(string value);
    partial void OnRagioneSocialeChanged();
    partial void OnRecapito1Changing(string value);
    partial void OnRecapito1Changed();
    partial void OnRecapito2Changing(System.Nullable<char> value);
    partial void OnRecapito2Changed();
    partial void OnIndirizzoEmail1Changing(string value);
    partial void OnIndirizzoEmail1Changed();
    partial void OnIndirizzoEmail2Changing(System.Nullable<char> value);
    partial void OnIndirizzoEmail2Changed();
    partial void OnIndirizzoChanging(string value);
    partial void OnIndirizzoChanged();
    partial void OnCittàChanging(string value);
    partial void OnCittàChanged();
    partial void OnProvinciaChanging(string value);
    partial void OnProvinciaChanged();
    partial void OnCAPChanging(string value);
    partial void OnCAPChanged();
    #endregion
		
		public Cliente()
		{
			this._ContrattoVendita = new EntitySet<ContrattoVendita>(new Action<ContrattoVendita>(this.attach_ContrattoVendita), new Action<ContrattoVendita>(this.detach_ContrattoVendita));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TipoCliente", DbType="Char(1) NOT NULL")]
		public char TipoCliente
		{
			get
			{
				return this._TipoCliente;
			}
			set
			{
				if ((this._TipoCliente != value))
				{
					this.OnTipoClienteChanging(value);
					this.SendPropertyChanging();
					this._TipoCliente = value;
					this.SendPropertyChanged("TipoCliente");
					this.OnTipoClienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodiceFiscale", DbType="VarChar(16)")]
		public string CodiceFiscale
		{
			get
			{
				return this._CodiceFiscale;
			}
			set
			{
				if ((this._CodiceFiscale != value))
				{
					this.OnCodiceFiscaleChanging(value);
					this.SendPropertyChanging();
					this._CodiceFiscale = value;
					this.SendPropertyChanged("CodiceFiscale");
					this.OnCodiceFiscaleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="VarChar(20)")]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cognome", DbType="VarChar(20)")]
		public string Cognome
		{
			get
			{
				return this._Cognome;
			}
			set
			{
				if ((this._Cognome != value))
				{
					this.OnCognomeChanging(value);
					this.SendPropertyChanging();
					this._Cognome = value;
					this.SendPropertyChanged("Cognome");
					this.OnCognomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataNascita", DbType="Date")]
		public System.Nullable<System.DateTime> DataNascita
		{
			get
			{
				return this._DataNascita;
			}
			set
			{
				if ((this._DataNascita != value))
				{
					this.OnDataNascitaChanging(value);
					this.SendPropertyChanging();
					this._DataNascita = value;
					this.SendPropertyChanged("DataNascita");
					this.OnDataNascitaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CittàNascita", DbType="VarChar(30)")]
		public string CittàNascita
		{
			get
			{
				return this._CittàNascita;
			}
			set
			{
				if ((this._CittàNascita != value))
				{
					this.OnCittàNascitaChanging(value);
					this.SendPropertyChanging();
					this._CittàNascita = value;
					this.SendPropertyChanged("CittàNascita");
					this.OnCittàNascitaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProvinciaNascita", DbType="VarChar(30)")]
		public string ProvinciaNascita
		{
			get
			{
				return this._ProvinciaNascita;
			}
			set
			{
				if ((this._ProvinciaNascita != value))
				{
					this.OnProvinciaNascitaChanging(value);
					this.SendPropertyChanging();
					this._ProvinciaNascita = value;
					this.SendPropertyChanged("ProvinciaNascita");
					this.OnProvinciaNascitaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartitaIVA", DbType="Char(11)")]
		public string PartitaIVA
		{
			get
			{
				return this._PartitaIVA;
			}
			set
			{
				if ((this._PartitaIVA != value))
				{
					this.OnPartitaIVAChanging(value);
					this.SendPropertyChanging();
					this._PartitaIVA = value;
					this.SendPropertyChanged("PartitaIVA");
					this.OnPartitaIVAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RagioneSociale", DbType="VarChar(50)")]
		public string RagioneSociale
		{
			get
			{
				return this._RagioneSociale;
			}
			set
			{
				if ((this._RagioneSociale != value))
				{
					this.OnRagioneSocialeChanging(value);
					this.SendPropertyChanging();
					this._RagioneSociale = value;
					this.SendPropertyChanged("RagioneSociale");
					this.OnRagioneSocialeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Recapito1", DbType="VarChar(12) NOT NULL", CanBeNull=false)]
		public string Recapito1
		{
			get
			{
				return this._Recapito1;
			}
			set
			{
				if ((this._Recapito1 != value))
				{
					this.OnRecapito1Changing(value);
					this.SendPropertyChanging();
					this._Recapito1 = value;
					this.SendPropertyChanged("Recapito1");
					this.OnRecapito1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Recapito2", DbType="Char(1)")]
		public System.Nullable<char> Recapito2
		{
			get
			{
				return this._Recapito2;
			}
			set
			{
				if ((this._Recapito2 != value))
				{
					this.OnRecapito2Changing(value);
					this.SendPropertyChanging();
					this._Recapito2 = value;
					this.SendPropertyChanged("Recapito2");
					this.OnRecapito2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IndirizzoEmail1", DbType="VarChar(30)")]
		public string IndirizzoEmail1
		{
			get
			{
				return this._IndirizzoEmail1;
			}
			set
			{
				if ((this._IndirizzoEmail1 != value))
				{
					this.OnIndirizzoEmail1Changing(value);
					this.SendPropertyChanging();
					this._IndirizzoEmail1 = value;
					this.SendPropertyChanged("IndirizzoEmail1");
					this.OnIndirizzoEmail1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IndirizzoEmail2", DbType="Char(1)")]
		public System.Nullable<char> IndirizzoEmail2
		{
			get
			{
				return this._IndirizzoEmail2;
			}
			set
			{
				if ((this._IndirizzoEmail2 != value))
				{
					this.OnIndirizzoEmail2Changing(value);
					this.SendPropertyChanging();
					this._IndirizzoEmail2 = value;
					this.SendPropertyChanged("IndirizzoEmail2");
					this.OnIndirizzoEmail2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Indirizzo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Indirizzo
		{
			get
			{
				return this._Indirizzo;
			}
			set
			{
				if ((this._Indirizzo != value))
				{
					this.OnIndirizzoChanging(value);
					this.SendPropertyChanging();
					this._Indirizzo = value;
					this.SendPropertyChanged("Indirizzo");
					this.OnIndirizzoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Città", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Città
		{
			get
			{
				return this._Città;
			}
			set
			{
				if ((this._Città != value))
				{
					this.OnCittàChanging(value);
					this.SendPropertyChanging();
					this._Città = value;
					this.SendPropertyChanged("Città");
					this.OnCittàChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Provincia", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Provincia
		{
			get
			{
				return this._Provincia;
			}
			set
			{
				if ((this._Provincia != value))
				{
					this.OnProvinciaChanging(value);
					this.SendPropertyChanging();
					this._Provincia = value;
					this.SendPropertyChanged("Provincia");
					this.OnProvinciaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CAP", DbType="Char(5) NOT NULL", CanBeNull=false)]
		public string CAP
		{
			get
			{
				return this._CAP;
			}
			set
			{
				if ((this._CAP != value))
				{
					this.OnCAPChanging(value);
					this.SendPropertyChanging();
					this._CAP = value;
					this.SendPropertyChanged("CAP");
					this.OnCAPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cliente_ContrattoVendita", Storage="_ContrattoVendita", ThisKey="Id", OtherKey="Cliente")]
		public EntitySet<ContrattoVendita> ContrattoVendita
		{
			get
			{
				return this._ContrattoVendita;
			}
			set
			{
				this._ContrattoVendita.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ContrattoVendita(ContrattoVendita entity)
		{
			this.SendPropertyChanging();
			entity.Cliente1 = this;
		}
		
		private void detach_ContrattoVendita(ContrattoVendita entity)
		{
			this.SendPropertyChanging();
			entity.Cliente1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ContrattoVendita")]
	public partial class ContrattoVendita : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _Numero;
		
		private System.DateTime _Data;
		
		private float _ImportoComplessivo;
		
		private float _ModalitàPagamento;
		
		private decimal _Cliente;
		
		private EntitySet<RataCliente> _RataCliente;
		
		private EntitySet<Trasporto> _Trasporto;
		
		private EntitySet<VeicoloVenduto> _VeicoloVenduto;
		
		private EntityRef<Cliente> _Cliente1;
		
		private EntityRef<NostreModalitàPagamento> _NostreModalitàPagamento;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNumeroChanging(decimal value);
    partial void OnNumeroChanged();
    partial void OnDataChanging(System.DateTime value);
    partial void OnDataChanged();
    partial void OnImportoComplessivoChanging(float value);
    partial void OnImportoComplessivoChanged();
    partial void OnModalitàPagamentoChanging(float value);
    partial void OnModalitàPagamentoChanged();
    partial void OnClienteChanging(decimal value);
    partial void OnClienteChanged();
    #endregion
		
		public ContrattoVendita()
		{
			this._RataCliente = new EntitySet<RataCliente>(new Action<RataCliente>(this.attach_RataCliente), new Action<RataCliente>(this.detach_RataCliente));
			this._Trasporto = new EntitySet<Trasporto>(new Action<Trasporto>(this.attach_Trasporto), new Action<Trasporto>(this.detach_Trasporto));
			this._VeicoloVenduto = new EntitySet<VeicoloVenduto>(new Action<VeicoloVenduto>(this.attach_VeicoloVenduto), new Action<VeicoloVenduto>(this.detach_VeicoloVenduto));
			this._Cliente1 = default(EntityRef<Cliente>);
			this._NostreModalitàPagamento = default(EntityRef<NostreModalitàPagamento>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Numero", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal Numero
		{
			get
			{
				return this._Numero;
			}
			set
			{
				if ((this._Numero != value))
				{
					this.OnNumeroChanging(value);
					this.SendPropertyChanging();
					this._Numero = value;
					this.SendPropertyChanged("Numero");
					this.OnNumeroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data", DbType="Date NOT NULL")]
		public System.DateTime Data
		{
			get
			{
				return this._Data;
			}
			set
			{
				if ((this._Data != value))
				{
					this.OnDataChanging(value);
					this.SendPropertyChanging();
					this._Data = value;
					this.SendPropertyChanged("Data");
					this.OnDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImportoComplessivo", DbType="Real NOT NULL")]
		public float ImportoComplessivo
		{
			get
			{
				return this._ImportoComplessivo;
			}
			set
			{
				if ((this._ImportoComplessivo != value))
				{
					this.OnImportoComplessivoChanging(value);
					this.SendPropertyChanging();
					this._ImportoComplessivo = value;
					this.SendPropertyChanged("ImportoComplessivo");
					this.OnImportoComplessivoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModalitàPagamento", DbType="Real NOT NULL")]
		public float ModalitàPagamento
		{
			get
			{
				return this._ModalitàPagamento;
			}
			set
			{
				if ((this._ModalitàPagamento != value))
				{
					if (this._NostreModalitàPagamento.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnModalitàPagamentoChanging(value);
					this.SendPropertyChanging();
					this._ModalitàPagamento = value;
					this.SendPropertyChanged("ModalitàPagamento");
					this.OnModalitàPagamentoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cliente", DbType="Decimal(18,0) NOT NULL")]
		public decimal Cliente
		{
			get
			{
				return this._Cliente;
			}
			set
			{
				if ((this._Cliente != value))
				{
					if (this._Cliente1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClienteChanging(value);
					this.SendPropertyChanging();
					this._Cliente = value;
					this.SendPropertyChanged("Cliente");
					this.OnClienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ContrattoVendita_RataCliente", Storage="_RataCliente", ThisKey="Numero", OtherKey="Contratto")]
		public EntitySet<RataCliente> RataCliente
		{
			get
			{
				return this._RataCliente;
			}
			set
			{
				this._RataCliente.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ContrattoVendita_Trasporto", Storage="_Trasporto", ThisKey="Numero", OtherKey="ContrattoNumero")]
		public EntitySet<Trasporto> Trasporto
		{
			get
			{
				return this._Trasporto;
			}
			set
			{
				this._Trasporto.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ContrattoVendita_VeicoloVenduto", Storage="_VeicoloVenduto", ThisKey="Numero", OtherKey="Contratto")]
		public EntitySet<VeicoloVenduto> VeicoloVenduto
		{
			get
			{
				return this._VeicoloVenduto;
			}
			set
			{
				this._VeicoloVenduto.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cliente_ContrattoVendita", Storage="_Cliente1", ThisKey="Cliente", OtherKey="Id", IsForeignKey=true)]
		public Cliente Cliente1
		{
			get
			{
				return this._Cliente1.Entity;
			}
			set
			{
				Cliente previousValue = this._Cliente1.Entity;
				if (((previousValue != value) 
							|| (this._Cliente1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cliente1.Entity = null;
						previousValue.ContrattoVendita.Remove(this);
					}
					this._Cliente1.Entity = value;
					if ((value != null))
					{
						value.ContrattoVendita.Add(this);
						this._Cliente = value.Id;
					}
					else
					{
						this._Cliente = default(decimal);
					}
					this.SendPropertyChanged("Cliente1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NostreModalitàPagamento_ContrattoVendita", Storage="_NostreModalitàPagamento", ThisKey="ModalitàPagamento", OtherKey="Da", IsForeignKey=true)]
		public NostreModalitàPagamento NostreModalitàPagamento
		{
			get
			{
				return this._NostreModalitàPagamento.Entity;
			}
			set
			{
				NostreModalitàPagamento previousValue = this._NostreModalitàPagamento.Entity;
				if (((previousValue != value) 
							|| (this._NostreModalitàPagamento.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NostreModalitàPagamento.Entity = null;
						previousValue.ContrattoVendita.Remove(this);
					}
					this._NostreModalitàPagamento.Entity = value;
					if ((value != null))
					{
						value.ContrattoVendita.Add(this);
						this._ModalitàPagamento = value.Da;
					}
					else
					{
						this._ModalitàPagamento = default(float);
					}
					this.SendPropertyChanged("NostreModalitàPagamento");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RataCliente(RataCliente entity)
		{
			this.SendPropertyChanging();
			entity.ContrattoVendita = this;
		}
		
		private void detach_RataCliente(RataCliente entity)
		{
			this.SendPropertyChanging();
			entity.ContrattoVendita = null;
		}
		
		private void attach_Trasporto(Trasporto entity)
		{
			this.SendPropertyChanging();
			entity.ContrattoVendita = this;
		}
		
		private void detach_Trasporto(Trasporto entity)
		{
			this.SendPropertyChanging();
			entity.ContrattoVendita = null;
		}
		
		private void attach_VeicoloVenduto(VeicoloVenduto entity)
		{
			this.SendPropertyChanging();
			entity.ContrattoVendita = this;
		}
		
		private void detach_VeicoloVenduto(VeicoloVenduto entity)
		{
			this.SendPropertyChanging();
			entity.ContrattoVendita = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Corriere")]
	public partial class Corriere : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _PartitaIVA;
		
		private string _RagioneSociale;
		
		private string _Indirizzo;
		
		private string _Città;
		
		private string _Provincia;
		
		private string _CAP;
		
		private string _Recapito1;
		
		private string _Recapito2;
		
		private string _IndirizzoEmail1;
		
		private string _IndirizzoEmail2;
		
		private EntitySet<Trasporto> _Trasporto;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPartitaIVAChanging(string value);
    partial void OnPartitaIVAChanged();
    partial void OnRagioneSocialeChanging(string value);
    partial void OnRagioneSocialeChanged();
    partial void OnIndirizzoChanging(string value);
    partial void OnIndirizzoChanged();
    partial void OnCittàChanging(string value);
    partial void OnCittàChanged();
    partial void OnProvinciaChanging(string value);
    partial void OnProvinciaChanged();
    partial void OnCAPChanging(string value);
    partial void OnCAPChanged();
    partial void OnRecapito1Changing(string value);
    partial void OnRecapito1Changed();
    partial void OnRecapito2Changing(string value);
    partial void OnRecapito2Changed();
    partial void OnIndirizzoEmail1Changing(string value);
    partial void OnIndirizzoEmail1Changed();
    partial void OnIndirizzoEmail2Changing(string value);
    partial void OnIndirizzoEmail2Changed();
    #endregion
		
		public Corriere()
		{
			this._Trasporto = new EntitySet<Trasporto>(new Action<Trasporto>(this.attach_Trasporto), new Action<Trasporto>(this.detach_Trasporto));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartitaIVA", DbType="Char(11) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PartitaIVA
		{
			get
			{
				return this._PartitaIVA;
			}
			set
			{
				if ((this._PartitaIVA != value))
				{
					this.OnPartitaIVAChanging(value);
					this.SendPropertyChanging();
					this._PartitaIVA = value;
					this.SendPropertyChanged("PartitaIVA");
					this.OnPartitaIVAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RagioneSociale", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string RagioneSociale
		{
			get
			{
				return this._RagioneSociale;
			}
			set
			{
				if ((this._RagioneSociale != value))
				{
					this.OnRagioneSocialeChanging(value);
					this.SendPropertyChanging();
					this._RagioneSociale = value;
					this.SendPropertyChanged("RagioneSociale");
					this.OnRagioneSocialeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Indirizzo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Indirizzo
		{
			get
			{
				return this._Indirizzo;
			}
			set
			{
				if ((this._Indirizzo != value))
				{
					this.OnIndirizzoChanging(value);
					this.SendPropertyChanging();
					this._Indirizzo = value;
					this.SendPropertyChanged("Indirizzo");
					this.OnIndirizzoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Città", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Città
		{
			get
			{
				return this._Città;
			}
			set
			{
				if ((this._Città != value))
				{
					this.OnCittàChanging(value);
					this.SendPropertyChanging();
					this._Città = value;
					this.SendPropertyChanged("Città");
					this.OnCittàChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Provincia", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Provincia
		{
			get
			{
				return this._Provincia;
			}
			set
			{
				if ((this._Provincia != value))
				{
					this.OnProvinciaChanging(value);
					this.SendPropertyChanging();
					this._Provincia = value;
					this.SendPropertyChanged("Provincia");
					this.OnProvinciaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CAP", DbType="Char(5) NOT NULL", CanBeNull=false)]
		public string CAP
		{
			get
			{
				return this._CAP;
			}
			set
			{
				if ((this._CAP != value))
				{
					this.OnCAPChanging(value);
					this.SendPropertyChanging();
					this._CAP = value;
					this.SendPropertyChanged("CAP");
					this.OnCAPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Recapito1", DbType="VarChar(12) NOT NULL", CanBeNull=false)]
		public string Recapito1
		{
			get
			{
				return this._Recapito1;
			}
			set
			{
				if ((this._Recapito1 != value))
				{
					this.OnRecapito1Changing(value);
					this.SendPropertyChanging();
					this._Recapito1 = value;
					this.SendPropertyChanged("Recapito1");
					this.OnRecapito1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Recapito2", DbType="VarChar(12)")]
		public string Recapito2
		{
			get
			{
				return this._Recapito2;
			}
			set
			{
				if ((this._Recapito2 != value))
				{
					this.OnRecapito2Changing(value);
					this.SendPropertyChanging();
					this._Recapito2 = value;
					this.SendPropertyChanged("Recapito2");
					this.OnRecapito2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IndirizzoEmail1", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string IndirizzoEmail1
		{
			get
			{
				return this._IndirizzoEmail1;
			}
			set
			{
				if ((this._IndirizzoEmail1 != value))
				{
					this.OnIndirizzoEmail1Changing(value);
					this.SendPropertyChanging();
					this._IndirizzoEmail1 = value;
					this.SendPropertyChanged("IndirizzoEmail1");
					this.OnIndirizzoEmail1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IndirizzoEmail2", DbType="VarChar(50)")]
		public string IndirizzoEmail2
		{
			get
			{
				return this._IndirizzoEmail2;
			}
			set
			{
				if ((this._IndirizzoEmail2 != value))
				{
					this.OnIndirizzoEmail2Changing(value);
					this.SendPropertyChanging();
					this._IndirizzoEmail2 = value;
					this.SendPropertyChanged("IndirizzoEmail2");
					this.OnIndirizzoEmail2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Corriere_Trasporto", Storage="_Trasporto", ThisKey="PartitaIVA", OtherKey="Corriere")]
		public EntitySet<Trasporto> Trasporto
		{
			get
			{
				return this._Trasporto;
			}
			set
			{
				this._Trasporto.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Trasporto(Trasporto entity)
		{
			this.SendPropertyChanging();
			entity.Corriere1 = this;
		}
		
		private void detach_Trasporto(Trasporto entity)
		{
			this.SendPropertyChanging();
			entity.Corriere1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Dotazione")]
	public partial class Dotazione : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Optional;
		
		private decimal _Veicolo;
		
		private EntityRef<Optional> _Optional1;
		
		private EntityRef<VeicoloVenduto> _VeicoloVenduto;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOptionalChanging(string value);
    partial void OnOptionalChanged();
    partial void OnVeicoloChanging(decimal value);
    partial void OnVeicoloChanged();
    #endregion
		
		public Dotazione()
		{
			this._Optional1 = default(EntityRef<Optional>);
			this._VeicoloVenduto = default(EntityRef<VeicoloVenduto>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Optional", DbType="Char(6) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Optional
		{
			get
			{
				return this._Optional;
			}
			set
			{
				if ((this._Optional != value))
				{
					if (this._Optional1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOptionalChanging(value);
					this.SendPropertyChanging();
					this._Optional = value;
					this.SendPropertyChanged("Optional");
					this.OnOptionalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Veicolo", DbType="Decimal(18,0) NOT NULL", IsPrimaryKey=true)]
		public decimal Veicolo
		{
			get
			{
				return this._Veicolo;
			}
			set
			{
				if ((this._Veicolo != value))
				{
					if (this._VeicoloVenduto.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVeicoloChanging(value);
					this.SendPropertyChanging();
					this._Veicolo = value;
					this.SendPropertyChanged("Veicolo");
					this.OnVeicoloChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Optional_Dotazione", Storage="_Optional1", ThisKey="Optional", OtherKey="Codice", IsForeignKey=true)]
		public Optional Optional1
		{
			get
			{
				return this._Optional1.Entity;
			}
			set
			{
				Optional previousValue = this._Optional1.Entity;
				if (((previousValue != value) 
							|| (this._Optional1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Optional1.Entity = null;
						previousValue.Dotazione.Remove(this);
					}
					this._Optional1.Entity = value;
					if ((value != null))
					{
						value.Dotazione.Add(this);
						this._Optional = value.Codice;
					}
					else
					{
						this._Optional = default(string);
					}
					this.SendPropertyChanged("Optional1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VeicoloVenduto_Dotazione", Storage="_VeicoloVenduto", ThisKey="Veicolo", OtherKey="Id", IsForeignKey=true)]
		public VeicoloVenduto VeicoloVenduto
		{
			get
			{
				return this._VeicoloVenduto.Entity;
			}
			set
			{
				VeicoloVenduto previousValue = this._VeicoloVenduto.Entity;
				if (((previousValue != value) 
							|| (this._VeicoloVenduto.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._VeicoloVenduto.Entity = null;
						previousValue.Dotazione.Remove(this);
					}
					this._VeicoloVenduto.Entity = value;
					if ((value != null))
					{
						value.Dotazione.Add(this);
						this._Veicolo = value.Id;
					}
					else
					{
						this._Veicolo = default(decimal);
					}
					this.SendPropertyChanged("VeicoloVenduto");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FatturaAcquisto")]
	public partial class FatturaAcquisto : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Fornitore;
		
		private decimal _Numero;
		
		private decimal _Ordine;
		
		private System.DateTime _Data;
		
		private float _ImportoComplessivo;
		
		private string _ModPagamentoFornitore;
		
		private float _ModPagamentoDa;
		
		private EntitySet<Rata> _Rata;
		
		private EntityRef<Fornitore> _Fornitore1;
		
		private EntityRef<ModalitàPagamento> _ModalitàPagamento;
		
		private EntityRef<Ordine> _Ordine1;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFornitoreChanging(string value);
    partial void OnFornitoreChanged();
    partial void OnNumeroChanging(decimal value);
    partial void OnNumeroChanged();
    partial void OnOrdineChanging(decimal value);
    partial void OnOrdineChanged();
    partial void OnDataChanging(System.DateTime value);
    partial void OnDataChanged();
    partial void OnImportoComplessivoChanging(float value);
    partial void OnImportoComplessivoChanged();
    partial void OnModPagamentoFornitoreChanging(string value);
    partial void OnModPagamentoFornitoreChanged();
    partial void OnModPagamentoDaChanging(float value);
    partial void OnModPagamentoDaChanged();
    #endregion
		
		public FatturaAcquisto()
		{
			this._Rata = new EntitySet<Rata>(new Action<Rata>(this.attach_Rata), new Action<Rata>(this.detach_Rata));
			this._Fornitore1 = default(EntityRef<Fornitore>);
			this._ModalitàPagamento = default(EntityRef<ModalitàPagamento>);
			this._Ordine1 = default(EntityRef<Ordine>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fornitore", DbType="Char(11) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Fornitore
		{
			get
			{
				return this._Fornitore;
			}
			set
			{
				if ((this._Fornitore != value))
				{
					if (this._Fornitore1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFornitoreChanging(value);
					this.SendPropertyChanging();
					this._Fornitore = value;
					this.SendPropertyChanged("Fornitore");
					this.OnFornitoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Numero", DbType="Decimal(6,0) NOT NULL", IsPrimaryKey=true)]
		public decimal Numero
		{
			get
			{
				return this._Numero;
			}
			set
			{
				if ((this._Numero != value))
				{
					this.OnNumeroChanging(value);
					this.SendPropertyChanging();
					this._Numero = value;
					this.SendPropertyChanged("Numero");
					this.OnNumeroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ordine", DbType="Decimal(18,0) NOT NULL")]
		public decimal Ordine
		{
			get
			{
				return this._Ordine;
			}
			set
			{
				if ((this._Ordine != value))
				{
					if (this._Ordine1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrdineChanging(value);
					this.SendPropertyChanging();
					this._Ordine = value;
					this.SendPropertyChanged("Ordine");
					this.OnOrdineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data", DbType="Date NOT NULL")]
		public System.DateTime Data
		{
			get
			{
				return this._Data;
			}
			set
			{
				if ((this._Data != value))
				{
					this.OnDataChanging(value);
					this.SendPropertyChanging();
					this._Data = value;
					this.SendPropertyChanged("Data");
					this.OnDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImportoComplessivo", DbType="Real NOT NULL")]
		public float ImportoComplessivo
		{
			get
			{
				return this._ImportoComplessivo;
			}
			set
			{
				if ((this._ImportoComplessivo != value))
				{
					this.OnImportoComplessivoChanging(value);
					this.SendPropertyChanging();
					this._ImportoComplessivo = value;
					this.SendPropertyChanged("ImportoComplessivo");
					this.OnImportoComplessivoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModPagamentoFornitore", DbType="Char(11) NOT NULL", CanBeNull=false)]
		public string ModPagamentoFornitore
		{
			get
			{
				return this._ModPagamentoFornitore;
			}
			set
			{
				if ((this._ModPagamentoFornitore != value))
				{
					if (this._ModalitàPagamento.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnModPagamentoFornitoreChanging(value);
					this.SendPropertyChanging();
					this._ModPagamentoFornitore = value;
					this.SendPropertyChanged("ModPagamentoFornitore");
					this.OnModPagamentoFornitoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModPagamentoDa", DbType="Real NOT NULL")]
		public float ModPagamentoDa
		{
			get
			{
				return this._ModPagamentoDa;
			}
			set
			{
				if ((this._ModPagamentoDa != value))
				{
					if (this._ModalitàPagamento.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnModPagamentoDaChanging(value);
					this.SendPropertyChanging();
					this._ModPagamentoDa = value;
					this.SendPropertyChanged("ModPagamentoDa");
					this.OnModPagamentoDaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FatturaAcquisto_Rata", Storage="_Rata", ThisKey="Fornitore,Numero", OtherKey="FornitoreFattura,NumeroFattura")]
		public EntitySet<Rata> Rata
		{
			get
			{
				return this._Rata;
			}
			set
			{
				this._Rata.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Fornitore_FatturaAcquisto", Storage="_Fornitore1", ThisKey="Fornitore", OtherKey="PartitaIVA", IsForeignKey=true)]
		public Fornitore Fornitore1
		{
			get
			{
				return this._Fornitore1.Entity;
			}
			set
			{
				Fornitore previousValue = this._Fornitore1.Entity;
				if (((previousValue != value) 
							|| (this._Fornitore1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Fornitore1.Entity = null;
						previousValue.FatturaAcquisto.Remove(this);
					}
					this._Fornitore1.Entity = value;
					if ((value != null))
					{
						value.FatturaAcquisto.Add(this);
						this._Fornitore = value.PartitaIVA;
					}
					else
					{
						this._Fornitore = default(string);
					}
					this.SendPropertyChanged("Fornitore1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ModalitàPagamento_FatturaAcquisto", Storage="_ModalitàPagamento", ThisKey="ModPagamentoFornitore,ModPagamentoDa", OtherKey="Fornitore,Da", IsForeignKey=true)]
		public ModalitàPagamento ModalitàPagamento
		{
			get
			{
				return this._ModalitàPagamento.Entity;
			}
			set
			{
				ModalitàPagamento previousValue = this._ModalitàPagamento.Entity;
				if (((previousValue != value) 
							|| (this._ModalitàPagamento.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ModalitàPagamento.Entity = null;
						previousValue.FatturaAcquisto.Remove(this);
					}
					this._ModalitàPagamento.Entity = value;
					if ((value != null))
					{
						value.FatturaAcquisto.Add(this);
						this._ModPagamentoFornitore = value.Fornitore;
						this._ModPagamentoDa = value.Da;
					}
					else
					{
						this._ModPagamentoFornitore = default(string);
						this._ModPagamentoDa = default(float);
					}
					this.SendPropertyChanged("ModalitàPagamento");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ordine_FatturaAcquisto", Storage="_Ordine1", ThisKey="Ordine", OtherKey="Id", IsForeignKey=true)]
		public Ordine Ordine1
		{
			get
			{
				return this._Ordine1.Entity;
			}
			set
			{
				Ordine previousValue = this._Ordine1.Entity;
				if (((previousValue != value) 
							|| (this._Ordine1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ordine1.Entity = null;
						previousValue.FatturaAcquisto.Remove(this);
					}
					this._Ordine1.Entity = value;
					if ((value != null))
					{
						value.FatturaAcquisto.Add(this);
						this._Ordine = value.Id;
					}
					else
					{
						this._Ordine = default(decimal);
					}
					this.SendPropertyChanged("Ordine1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Rata(Rata entity)
		{
			this.SendPropertyChanging();
			entity.FatturaAcquisto = this;
		}
		
		private void detach_Rata(Rata entity)
		{
			this.SendPropertyChanging();
			entity.FatturaAcquisto = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Fornitore")]
	public partial class Fornitore : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _PartitaIVA;
		
		private char _CasaProduttrice;
		
		private char _FornitoreRicambi;
		
		private string _RagioneSociale;
		
		private string _Recapito1;
		
		private string _Recapito2;
		
		private string _IndirizzoEmail1;
		
		private string _IndirizzoEmail2;
		
		private string _Indirizzo;
		
		private string _Città;
		
		private string _Provincia;
		
		private string _CAP;
		
		private EntitySet<FatturaAcquisto> _FatturaAcquisto;
		
		private EntitySet<ModalitàPagamento> _ModalitàPagamento;
		
		private EntitySet<ModelloVeicolo> _ModelloVeicolo;
		
		private EntitySet<Ordine> _Ordine;
		
		private EntitySet<Ricambio> _Ricambio;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPartitaIVAChanging(string value);
    partial void OnPartitaIVAChanged();
    partial void OnCasaProduttriceChanging(char value);
    partial void OnCasaProduttriceChanged();
    partial void OnFornitoreRicambiChanging(char value);
    partial void OnFornitoreRicambiChanged();
    partial void OnRagioneSocialeChanging(string value);
    partial void OnRagioneSocialeChanged();
    partial void OnRecapito1Changing(string value);
    partial void OnRecapito1Changed();
    partial void OnRecapito2Changing(string value);
    partial void OnRecapito2Changed();
    partial void OnIndirizzoEmail1Changing(string value);
    partial void OnIndirizzoEmail1Changed();
    partial void OnIndirizzoEmail2Changing(string value);
    partial void OnIndirizzoEmail2Changed();
    partial void OnIndirizzoChanging(string value);
    partial void OnIndirizzoChanged();
    partial void OnCittàChanging(string value);
    partial void OnCittàChanged();
    partial void OnProvinciaChanging(string value);
    partial void OnProvinciaChanged();
    partial void OnCAPChanging(string value);
    partial void OnCAPChanged();
    #endregion
		
		public Fornitore()
		{
			this._FatturaAcquisto = new EntitySet<FatturaAcquisto>(new Action<FatturaAcquisto>(this.attach_FatturaAcquisto), new Action<FatturaAcquisto>(this.detach_FatturaAcquisto));
			this._ModalitàPagamento = new EntitySet<ModalitàPagamento>(new Action<ModalitàPagamento>(this.attach_ModalitàPagamento), new Action<ModalitàPagamento>(this.detach_ModalitàPagamento));
			this._ModelloVeicolo = new EntitySet<ModelloVeicolo>(new Action<ModelloVeicolo>(this.attach_ModelloVeicolo), new Action<ModelloVeicolo>(this.detach_ModelloVeicolo));
			this._Ordine = new EntitySet<Ordine>(new Action<Ordine>(this.attach_Ordine), new Action<Ordine>(this.detach_Ordine));
			this._Ricambio = new EntitySet<Ricambio>(new Action<Ricambio>(this.attach_Ricambio), new Action<Ricambio>(this.detach_Ricambio));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PartitaIVA", DbType="Char(11) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PartitaIVA
		{
			get
			{
				return this._PartitaIVA;
			}
			set
			{
				if ((this._PartitaIVA != value))
				{
					this.OnPartitaIVAChanging(value);
					this.SendPropertyChanging();
					this._PartitaIVA = value;
					this.SendPropertyChanged("PartitaIVA");
					this.OnPartitaIVAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CasaProduttrice", DbType="Char(1) NOT NULL")]
		public char CasaProduttrice
		{
			get
			{
				return this._CasaProduttrice;
			}
			set
			{
				if ((this._CasaProduttrice != value))
				{
					this.OnCasaProduttriceChanging(value);
					this.SendPropertyChanging();
					this._CasaProduttrice = value;
					this.SendPropertyChanged("CasaProduttrice");
					this.OnCasaProduttriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FornitoreRicambi", DbType="Char(1) NOT NULL")]
		public char FornitoreRicambi
		{
			get
			{
				return this._FornitoreRicambi;
			}
			set
			{
				if ((this._FornitoreRicambi != value))
				{
					this.OnFornitoreRicambiChanging(value);
					this.SendPropertyChanging();
					this._FornitoreRicambi = value;
					this.SendPropertyChanged("FornitoreRicambi");
					this.OnFornitoreRicambiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RagioneSociale", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string RagioneSociale
		{
			get
			{
				return this._RagioneSociale;
			}
			set
			{
				if ((this._RagioneSociale != value))
				{
					this.OnRagioneSocialeChanging(value);
					this.SendPropertyChanging();
					this._RagioneSociale = value;
					this.SendPropertyChanged("RagioneSociale");
					this.OnRagioneSocialeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Recapito1", DbType="VarChar(12) NOT NULL", CanBeNull=false)]
		public string Recapito1
		{
			get
			{
				return this._Recapito1;
			}
			set
			{
				if ((this._Recapito1 != value))
				{
					this.OnRecapito1Changing(value);
					this.SendPropertyChanging();
					this._Recapito1 = value;
					this.SendPropertyChanged("Recapito1");
					this.OnRecapito1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Recapito2", DbType="VarChar(12)")]
		public string Recapito2
		{
			get
			{
				return this._Recapito2;
			}
			set
			{
				if ((this._Recapito2 != value))
				{
					this.OnRecapito2Changing(value);
					this.SendPropertyChanging();
					this._Recapito2 = value;
					this.SendPropertyChanged("Recapito2");
					this.OnRecapito2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IndirizzoEmail1", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string IndirizzoEmail1
		{
			get
			{
				return this._IndirizzoEmail1;
			}
			set
			{
				if ((this._IndirizzoEmail1 != value))
				{
					this.OnIndirizzoEmail1Changing(value);
					this.SendPropertyChanging();
					this._IndirizzoEmail1 = value;
					this.SendPropertyChanged("IndirizzoEmail1");
					this.OnIndirizzoEmail1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IndirizzoEmail2", DbType="VarChar(50)")]
		public string IndirizzoEmail2
		{
			get
			{
				return this._IndirizzoEmail2;
			}
			set
			{
				if ((this._IndirizzoEmail2 != value))
				{
					this.OnIndirizzoEmail2Changing(value);
					this.SendPropertyChanging();
					this._IndirizzoEmail2 = value;
					this.SendPropertyChanged("IndirizzoEmail2");
					this.OnIndirizzoEmail2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Indirizzo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Indirizzo
		{
			get
			{
				return this._Indirizzo;
			}
			set
			{
				if ((this._Indirizzo != value))
				{
					this.OnIndirizzoChanging(value);
					this.SendPropertyChanging();
					this._Indirizzo = value;
					this.SendPropertyChanged("Indirizzo");
					this.OnIndirizzoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Città", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Città
		{
			get
			{
				return this._Città;
			}
			set
			{
				if ((this._Città != value))
				{
					this.OnCittàChanging(value);
					this.SendPropertyChanging();
					this._Città = value;
					this.SendPropertyChanged("Città");
					this.OnCittàChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Provincia", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Provincia
		{
			get
			{
				return this._Provincia;
			}
			set
			{
				if ((this._Provincia != value))
				{
					this.OnProvinciaChanging(value);
					this.SendPropertyChanging();
					this._Provincia = value;
					this.SendPropertyChanged("Provincia");
					this.OnProvinciaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CAP", DbType="Char(5) NOT NULL", CanBeNull=false)]
		public string CAP
		{
			get
			{
				return this._CAP;
			}
			set
			{
				if ((this._CAP != value))
				{
					this.OnCAPChanging(value);
					this.SendPropertyChanging();
					this._CAP = value;
					this.SendPropertyChanged("CAP");
					this.OnCAPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Fornitore_FatturaAcquisto", Storage="_FatturaAcquisto", ThisKey="PartitaIVA", OtherKey="Fornitore")]
		public EntitySet<FatturaAcquisto> FatturaAcquisto
		{
			get
			{
				return this._FatturaAcquisto;
			}
			set
			{
				this._FatturaAcquisto.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Fornitore_ModalitàPagamento", Storage="_ModalitàPagamento", ThisKey="PartitaIVA", OtherKey="Fornitore")]
		public EntitySet<ModalitàPagamento> ModalitàPagamento
		{
			get
			{
				return this._ModalitàPagamento;
			}
			set
			{
				this._ModalitàPagamento.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Fornitore_ModelloVeicolo", Storage="_ModelloVeicolo", ThisKey="PartitaIVA", OtherKey="CasaProduttrice")]
		public EntitySet<ModelloVeicolo> ModelloVeicolo
		{
			get
			{
				return this._ModelloVeicolo;
			}
			set
			{
				this._ModelloVeicolo.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Fornitore_Ordine", Storage="_Ordine", ThisKey="PartitaIVA", OtherKey="Fornitore")]
		public EntitySet<Ordine> Ordine
		{
			get
			{
				return this._Ordine;
			}
			set
			{
				this._Ordine.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Fornitore_Ricambio", Storage="_Ricambio", ThisKey="PartitaIVA", OtherKey="Fornitore")]
		public EntitySet<Ricambio> Ricambio
		{
			get
			{
				return this._Ricambio;
			}
			set
			{
				this._Ricambio.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FatturaAcquisto(FatturaAcquisto entity)
		{
			this.SendPropertyChanging();
			entity.Fornitore1 = this;
		}
		
		private void detach_FatturaAcquisto(FatturaAcquisto entity)
		{
			this.SendPropertyChanging();
			entity.Fornitore1 = null;
		}
		
		private void attach_ModalitàPagamento(ModalitàPagamento entity)
		{
			this.SendPropertyChanging();
			entity.Fornitore1 = this;
		}
		
		private void detach_ModalitàPagamento(ModalitàPagamento entity)
		{
			this.SendPropertyChanging();
			entity.Fornitore1 = null;
		}
		
		private void attach_ModelloVeicolo(ModelloVeicolo entity)
		{
			this.SendPropertyChanging();
			entity.Fornitore = this;
		}
		
		private void detach_ModelloVeicolo(ModelloVeicolo entity)
		{
			this.SendPropertyChanging();
			entity.Fornitore = null;
		}
		
		private void attach_Ordine(Ordine entity)
		{
			this.SendPropertyChanging();
			entity.Fornitore1 = this;
		}
		
		private void detach_Ordine(Ordine entity)
		{
			this.SendPropertyChanging();
			entity.Fornitore1 = null;
		}
		
		private void attach_Ricambio(Ricambio entity)
		{
			this.SendPropertyChanging();
			entity.Fornitore1 = this;
		}
		
		private void detach_Ricambio(Ricambio entity)
		{
			this.SendPropertyChanging();
			entity.Fornitore1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Giacenza")]
	public partial class Giacenza : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Ricambio;
		
		private decimal _Numero;
		
		private System.DateTime _Data;
		
		private decimal _Quantità;
		
		private string _Causale;
		
		private EntityRef<Ricambio> _Ricambio1;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRicambioChanging(string value);
    partial void OnRicambioChanged();
    partial void OnNumeroChanging(decimal value);
    partial void OnNumeroChanged();
    partial void OnDataChanging(System.DateTime value);
    partial void OnDataChanged();
    partial void OnQuantitàChanging(decimal value);
    partial void OnQuantitàChanged();
    partial void OnCausaleChanging(string value);
    partial void OnCausaleChanged();
    #endregion
		
		public Giacenza()
		{
			this._Ricambio1 = default(EntityRef<Ricambio>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ricambio", DbType="Char(6) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Ricambio
		{
			get
			{
				return this._Ricambio;
			}
			set
			{
				if ((this._Ricambio != value))
				{
					if (this._Ricambio1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRicambioChanging(value);
					this.SendPropertyChanging();
					this._Ricambio = value;
					this.SendPropertyChanged("Ricambio");
					this.OnRicambioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Numero", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal Numero
		{
			get
			{
				return this._Numero;
			}
			set
			{
				if ((this._Numero != value))
				{
					this.OnNumeroChanging(value);
					this.SendPropertyChanging();
					this._Numero = value;
					this.SendPropertyChanged("Numero");
					this.OnNumeroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data", DbType="Date NOT NULL")]
		public System.DateTime Data
		{
			get
			{
				return this._Data;
			}
			set
			{
				if ((this._Data != value))
				{
					this.OnDataChanging(value);
					this.SendPropertyChanging();
					this._Data = value;
					this.SendPropertyChanged("Data");
					this.OnDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantità", DbType="Decimal(6,0) NOT NULL")]
		public decimal Quantità
		{
			get
			{
				return this._Quantità;
			}
			set
			{
				if ((this._Quantità != value))
				{
					this.OnQuantitàChanging(value);
					this.SendPropertyChanging();
					this._Quantità = value;
					this.SendPropertyChanged("Quantità");
					this.OnQuantitàChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Causale", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Causale
		{
			get
			{
				return this._Causale;
			}
			set
			{
				if ((this._Causale != value))
				{
					this.OnCausaleChanging(value);
					this.SendPropertyChanging();
					this._Causale = value;
					this.SendPropertyChanged("Causale");
					this.OnCausaleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ricambio_Giacenza", Storage="_Ricambio1", ThisKey="Ricambio", OtherKey="Codice", IsForeignKey=true)]
		public Ricambio Ricambio1
		{
			get
			{
				return this._Ricambio1.Entity;
			}
			set
			{
				Ricambio previousValue = this._Ricambio1.Entity;
				if (((previousValue != value) 
							|| (this._Ricambio1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ricambio1.Entity = null;
						previousValue.Giacenza.Remove(this);
					}
					this._Ricambio1.Entity = value;
					if ((value != null))
					{
						value.Giacenza.Add(this);
						this._Ricambio = value.Codice;
					}
					else
					{
						this._Ricambio = default(string);
					}
					this.SendPropertyChanged("Ricambio1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ModalitàPagamento")]
	public partial class ModalitàPagamento : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Fornitore;
		
		private float _Da;
		
		private float _A;
		
		private string _Periodicità;
		
		private float _TassoInteresse;
		
		private decimal _NumeroRate;
		
		private EntitySet<FatturaAcquisto> _FatturaAcquisto;
		
		private EntityRef<Fornitore> _Fornitore1;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFornitoreChanging(string value);
    partial void OnFornitoreChanged();
    partial void OnDaChanging(float value);
    partial void OnDaChanged();
    partial void OnAChanging(float value);
    partial void OnAChanged();
    partial void OnPeriodicitàChanging(string value);
    partial void OnPeriodicitàChanged();
    partial void OnTassoInteresseChanging(float value);
    partial void OnTassoInteresseChanged();
    partial void OnNumeroRateChanging(decimal value);
    partial void OnNumeroRateChanged();
    #endregion
		
		public ModalitàPagamento()
		{
			this._FatturaAcquisto = new EntitySet<FatturaAcquisto>(new Action<FatturaAcquisto>(this.attach_FatturaAcquisto), new Action<FatturaAcquisto>(this.detach_FatturaAcquisto));
			this._Fornitore1 = default(EntityRef<Fornitore>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fornitore", DbType="Char(11) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Fornitore
		{
			get
			{
				return this._Fornitore;
			}
			set
			{
				if ((this._Fornitore != value))
				{
					if (this._Fornitore1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFornitoreChanging(value);
					this.SendPropertyChanging();
					this._Fornitore = value;
					this.SendPropertyChanged("Fornitore");
					this.OnFornitoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Da", DbType="Real NOT NULL", IsPrimaryKey=true)]
		public float Da
		{
			get
			{
				return this._Da;
			}
			set
			{
				if ((this._Da != value))
				{
					this.OnDaChanging(value);
					this.SendPropertyChanging();
					this._Da = value;
					this.SendPropertyChanged("Da");
					this.OnDaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_A", DbType="Real NOT NULL")]
		public float A
		{
			get
			{
				return this._A;
			}
			set
			{
				if ((this._A != value))
				{
					this.OnAChanging(value);
					this.SendPropertyChanging();
					this._A = value;
					this.SendPropertyChanged("A");
					this.OnAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Periodicità", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Periodicità
		{
			get
			{
				return this._Periodicità;
			}
			set
			{
				if ((this._Periodicità != value))
				{
					this.OnPeriodicitàChanging(value);
					this.SendPropertyChanging();
					this._Periodicità = value;
					this.SendPropertyChanged("Periodicità");
					this.OnPeriodicitàChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TassoInteresse", DbType="Real NOT NULL")]
		public float TassoInteresse
		{
			get
			{
				return this._TassoInteresse;
			}
			set
			{
				if ((this._TassoInteresse != value))
				{
					this.OnTassoInteresseChanging(value);
					this.SendPropertyChanging();
					this._TassoInteresse = value;
					this.SendPropertyChanged("TassoInteresse");
					this.OnTassoInteresseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumeroRate", DbType="Decimal(2,0) NOT NULL")]
		public decimal NumeroRate
		{
			get
			{
				return this._NumeroRate;
			}
			set
			{
				if ((this._NumeroRate != value))
				{
					this.OnNumeroRateChanging(value);
					this.SendPropertyChanging();
					this._NumeroRate = value;
					this.SendPropertyChanged("NumeroRate");
					this.OnNumeroRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ModalitàPagamento_FatturaAcquisto", Storage="_FatturaAcquisto", ThisKey="Fornitore,Da", OtherKey="ModPagamentoFornitore,ModPagamentoDa")]
		public EntitySet<FatturaAcquisto> FatturaAcquisto
		{
			get
			{
				return this._FatturaAcquisto;
			}
			set
			{
				this._FatturaAcquisto.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Fornitore_ModalitàPagamento", Storage="_Fornitore1", ThisKey="Fornitore", OtherKey="PartitaIVA", IsForeignKey=true)]
		public Fornitore Fornitore1
		{
			get
			{
				return this._Fornitore1.Entity;
			}
			set
			{
				Fornitore previousValue = this._Fornitore1.Entity;
				if (((previousValue != value) 
							|| (this._Fornitore1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Fornitore1.Entity = null;
						previousValue.ModalitàPagamento.Remove(this);
					}
					this._Fornitore1.Entity = value;
					if ((value != null))
					{
						value.ModalitàPagamento.Add(this);
						this._Fornitore = value.PartitaIVA;
					}
					else
					{
						this._Fornitore = default(string);
					}
					this.SendPropertyChanged("Fornitore1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FatturaAcquisto(FatturaAcquisto entity)
		{
			this.SendPropertyChanging();
			entity.ModalitàPagamento = this;
		}
		
		private void detach_FatturaAcquisto(FatturaAcquisto entity)
		{
			this.SendPropertyChanging();
			entity.ModalitàPagamento = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ModelloVeicolo")]
	public partial class ModelloVeicolo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Nome;
		
		private decimal _Anno;
		
		private string _CasaProduttrice;
		
		private EntitySet<VeicoloCatalogo> _VeicoloCatalogo;
		
		private EntityRef<Fornitore> _Fornitore;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnAnnoChanging(decimal value);
    partial void OnAnnoChanged();
    partial void OnCasaProduttriceChanging(string value);
    partial void OnCasaProduttriceChanged();
    #endregion
		
		public ModelloVeicolo()
		{
			this._VeicoloCatalogo = new EntitySet<VeicoloCatalogo>(new Action<VeicoloCatalogo>(this.attach_VeicoloCatalogo), new Action<VeicoloCatalogo>(this.detach_VeicoloCatalogo));
			this._Fornitore = default(EntityRef<Fornitore>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Anno", DbType="Decimal(4,0) NOT NULL", IsPrimaryKey=true)]
		public decimal Anno
		{
			get
			{
				return this._Anno;
			}
			set
			{
				if ((this._Anno != value))
				{
					this.OnAnnoChanging(value);
					this.SendPropertyChanging();
					this._Anno = value;
					this.SendPropertyChanged("Anno");
					this.OnAnnoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CasaProduttrice", DbType="Char(11) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CasaProduttrice
		{
			get
			{
				return this._CasaProduttrice;
			}
			set
			{
				if ((this._CasaProduttrice != value))
				{
					if (this._Fornitore.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCasaProduttriceChanging(value);
					this.SendPropertyChanging();
					this._CasaProduttrice = value;
					this.SendPropertyChanged("CasaProduttrice");
					this.OnCasaProduttriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ModelloVeicolo_VeicoloCatalogo", Storage="_VeicoloCatalogo", ThisKey="Nome,Anno,CasaProduttrice", OtherKey="NomeModello,AnnoModello,CasaProduttrice")]
		public EntitySet<VeicoloCatalogo> VeicoloCatalogo
		{
			get
			{
				return this._VeicoloCatalogo;
			}
			set
			{
				this._VeicoloCatalogo.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Fornitore_ModelloVeicolo", Storage="_Fornitore", ThisKey="CasaProduttrice", OtherKey="PartitaIVA", IsForeignKey=true)]
		public Fornitore Fornitore
		{
			get
			{
				return this._Fornitore.Entity;
			}
			set
			{
				Fornitore previousValue = this._Fornitore.Entity;
				if (((previousValue != value) 
							|| (this._Fornitore.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Fornitore.Entity = null;
						previousValue.ModelloVeicolo.Remove(this);
					}
					this._Fornitore.Entity = value;
					if ((value != null))
					{
						value.ModelloVeicolo.Add(this);
						this._CasaProduttrice = value.PartitaIVA;
					}
					else
					{
						this._CasaProduttrice = default(string);
					}
					this.SendPropertyChanged("Fornitore");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_VeicoloCatalogo(VeicoloCatalogo entity)
		{
			this.SendPropertyChanging();
			entity.ModelloVeicolo = this;
		}
		
		private void detach_VeicoloCatalogo(VeicoloCatalogo entity)
		{
			this.SendPropertyChanging();
			entity.ModelloVeicolo = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NostreModalitàPagamento")]
	public partial class NostreModalitàPagamento : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private float _Da;
		
		private float _A;
		
		private string _Periodicità;
		
		private float _TassoInteresse;
		
		private decimal _NumerRate;
		
		private EntitySet<ContrattoVendita> _ContrattoVendita;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDaChanging(float value);
    partial void OnDaChanged();
    partial void OnAChanging(float value);
    partial void OnAChanged();
    partial void OnPeriodicitàChanging(string value);
    partial void OnPeriodicitàChanged();
    partial void OnTassoInteresseChanging(float value);
    partial void OnTassoInteresseChanged();
    partial void OnNumerRateChanging(decimal value);
    partial void OnNumerRateChanged();
    #endregion
		
		public NostreModalitàPagamento()
		{
			this._ContrattoVendita = new EntitySet<ContrattoVendita>(new Action<ContrattoVendita>(this.attach_ContrattoVendita), new Action<ContrattoVendita>(this.detach_ContrattoVendita));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Da", DbType="Real NOT NULL", IsPrimaryKey=true)]
		public float Da
		{
			get
			{
				return this._Da;
			}
			set
			{
				if ((this._Da != value))
				{
					this.OnDaChanging(value);
					this.SendPropertyChanging();
					this._Da = value;
					this.SendPropertyChanged("Da");
					this.OnDaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_A", DbType="Real NOT NULL")]
		public float A
		{
			get
			{
				return this._A;
			}
			set
			{
				if ((this._A != value))
				{
					this.OnAChanging(value);
					this.SendPropertyChanging();
					this._A = value;
					this.SendPropertyChanged("A");
					this.OnAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Periodicità", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Periodicità
		{
			get
			{
				return this._Periodicità;
			}
			set
			{
				if ((this._Periodicità != value))
				{
					this.OnPeriodicitàChanging(value);
					this.SendPropertyChanging();
					this._Periodicità = value;
					this.SendPropertyChanged("Periodicità");
					this.OnPeriodicitàChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TassoInteresse", DbType="Real NOT NULL")]
		public float TassoInteresse
		{
			get
			{
				return this._TassoInteresse;
			}
			set
			{
				if ((this._TassoInteresse != value))
				{
					this.OnTassoInteresseChanging(value);
					this.SendPropertyChanging();
					this._TassoInteresse = value;
					this.SendPropertyChanged("TassoInteresse");
					this.OnTassoInteresseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumerRate", DbType="Decimal(2,0) NOT NULL")]
		public decimal NumerRate
		{
			get
			{
				return this._NumerRate;
			}
			set
			{
				if ((this._NumerRate != value))
				{
					this.OnNumerRateChanging(value);
					this.SendPropertyChanging();
					this._NumerRate = value;
					this.SendPropertyChanged("NumerRate");
					this.OnNumerRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NostreModalitàPagamento_ContrattoVendita", Storage="_ContrattoVendita", ThisKey="Da", OtherKey="ModalitàPagamento")]
		public EntitySet<ContrattoVendita> ContrattoVendita
		{
			get
			{
				return this._ContrattoVendita;
			}
			set
			{
				this._ContrattoVendita.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ContrattoVendita(ContrattoVendita entity)
		{
			this.SendPropertyChanging();
			entity.NostreModalitàPagamento = this;
		}
		
		private void detach_ContrattoVendita(ContrattoVendita entity)
		{
			this.SendPropertyChanging();
			entity.NostreModalitàPagamento = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Optional")]
	public partial class Optional : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Codice;
		
		private string _Nome;
		
		private string _Descrizione;
		
		private float _Prezzo;
		
		private EntitySet<Dotazione> _Dotazione;
		
		private EntitySet<Supporto> _Supporto;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodiceChanging(string value);
    partial void OnCodiceChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnDescrizioneChanging(string value);
    partial void OnDescrizioneChanged();
    partial void OnPrezzoChanging(float value);
    partial void OnPrezzoChanged();
    #endregion
		
		public Optional()
		{
			this._Dotazione = new EntitySet<Dotazione>(new Action<Dotazione>(this.attach_Dotazione), new Action<Dotazione>(this.detach_Dotazione));
			this._Supporto = new EntitySet<Supporto>(new Action<Supporto>(this.attach_Supporto), new Action<Supporto>(this.detach_Supporto));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codice", DbType="Char(6) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Codice
		{
			get
			{
				return this._Codice;
			}
			set
			{
				if ((this._Codice != value))
				{
					this.OnCodiceChanging(value);
					this.SendPropertyChanging();
					this._Codice = value;
					this.SendPropertyChanged("Codice");
					this.OnCodiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descrizione", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Descrizione
		{
			get
			{
				return this._Descrizione;
			}
			set
			{
				if ((this._Descrizione != value))
				{
					this.OnDescrizioneChanging(value);
					this.SendPropertyChanging();
					this._Descrizione = value;
					this.SendPropertyChanged("Descrizione");
					this.OnDescrizioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prezzo", DbType="Real NOT NULL")]
		public float Prezzo
		{
			get
			{
				return this._Prezzo;
			}
			set
			{
				if ((this._Prezzo != value))
				{
					this.OnPrezzoChanging(value);
					this.SendPropertyChanging();
					this._Prezzo = value;
					this.SendPropertyChanged("Prezzo");
					this.OnPrezzoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Optional_Dotazione", Storage="_Dotazione", ThisKey="Codice", OtherKey="Optional")]
		public EntitySet<Dotazione> Dotazione
		{
			get
			{
				return this._Dotazione;
			}
			set
			{
				this._Dotazione.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Optional_Supporto", Storage="_Supporto", ThisKey="Codice", OtherKey="Optional")]
		public EntitySet<Supporto> Supporto
		{
			get
			{
				return this._Supporto;
			}
			set
			{
				this._Supporto.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Dotazione(Dotazione entity)
		{
			this.SendPropertyChanging();
			entity.Optional1 = this;
		}
		
		private void detach_Dotazione(Dotazione entity)
		{
			this.SendPropertyChanging();
			entity.Optional1 = null;
		}
		
		private void attach_Supporto(Supporto entity)
		{
			this.SendPropertyChanging();
			entity.Optional1 = this;
		}
		
		private void detach_Supporto(Supporto entity)
		{
			this.SendPropertyChanging();
			entity.Optional1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ordine")]
	public partial class Ordine : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _Id;
		
		private char _TipoOrdine;
		
		private System.DateTime _DataOrdine;
		
		private System.DateTime _DataConsegnaPrevista;
		
		private System.Nullable<System.DateTime> _DataConsegna;
		
		private string _Fornitore;
		
		private EntitySet<FatturaAcquisto> _FatturaAcquisto;
		
		private EntitySet<OrdineRicambio> _OrdineRicambio;
		
		private EntitySet<OrdineVeicolo> _OrdineVeicolo;
		
		private EntityRef<Fornitore> _Fornitore1;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(decimal value);
    partial void OnIdChanged();
    partial void OnTipoOrdineChanging(char value);
    partial void OnTipoOrdineChanged();
    partial void OnDataOrdineChanging(System.DateTime value);
    partial void OnDataOrdineChanged();
    partial void OnDataConsegnaPrevistaChanging(System.DateTime value);
    partial void OnDataConsegnaPrevistaChanged();
    partial void OnDataConsegnaChanging(System.Nullable<System.DateTime> value);
    partial void OnDataConsegnaChanged();
    partial void OnFornitoreChanging(string value);
    partial void OnFornitoreChanged();
    #endregion
		
		public Ordine()
		{
			this._FatturaAcquisto = new EntitySet<FatturaAcquisto>(new Action<FatturaAcquisto>(this.attach_FatturaAcquisto), new Action<FatturaAcquisto>(this.detach_FatturaAcquisto));
			this._OrdineRicambio = new EntitySet<OrdineRicambio>(new Action<OrdineRicambio>(this.attach_OrdineRicambio), new Action<OrdineRicambio>(this.detach_OrdineRicambio));
			this._OrdineVeicolo = new EntitySet<OrdineVeicolo>(new Action<OrdineVeicolo>(this.attach_OrdineVeicolo), new Action<OrdineVeicolo>(this.detach_OrdineVeicolo));
			this._Fornitore1 = default(EntityRef<Fornitore>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TipoOrdine", DbType="Char(1) NOT NULL")]
		public char TipoOrdine
		{
			get
			{
				return this._TipoOrdine;
			}
			set
			{
				if ((this._TipoOrdine != value))
				{
					this.OnTipoOrdineChanging(value);
					this.SendPropertyChanging();
					this._TipoOrdine = value;
					this.SendPropertyChanged("TipoOrdine");
					this.OnTipoOrdineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataOrdine", DbType="Date NOT NULL")]
		public System.DateTime DataOrdine
		{
			get
			{
				return this._DataOrdine;
			}
			set
			{
				if ((this._DataOrdine != value))
				{
					this.OnDataOrdineChanging(value);
					this.SendPropertyChanging();
					this._DataOrdine = value;
					this.SendPropertyChanged("DataOrdine");
					this.OnDataOrdineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataConsegnaPrevista", DbType="Date NOT NULL")]
		public System.DateTime DataConsegnaPrevista
		{
			get
			{
				return this._DataConsegnaPrevista;
			}
			set
			{
				if ((this._DataConsegnaPrevista != value))
				{
					this.OnDataConsegnaPrevistaChanging(value);
					this.SendPropertyChanging();
					this._DataConsegnaPrevista = value;
					this.SendPropertyChanged("DataConsegnaPrevista");
					this.OnDataConsegnaPrevistaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataConsegna", DbType="Date")]
		public System.Nullable<System.DateTime> DataConsegna
		{
			get
			{
				return this._DataConsegna;
			}
			set
			{
				if ((this._DataConsegna != value))
				{
					this.OnDataConsegnaChanging(value);
					this.SendPropertyChanging();
					this._DataConsegna = value;
					this.SendPropertyChanged("DataConsegna");
					this.OnDataConsegnaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fornitore", DbType="Char(11) NOT NULL", CanBeNull=false)]
		public string Fornitore
		{
			get
			{
				return this._Fornitore;
			}
			set
			{
				if ((this._Fornitore != value))
				{
					if (this._Fornitore1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFornitoreChanging(value);
					this.SendPropertyChanging();
					this._Fornitore = value;
					this.SendPropertyChanged("Fornitore");
					this.OnFornitoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ordine_FatturaAcquisto", Storage="_FatturaAcquisto", ThisKey="Id", OtherKey="Ordine")]
		public EntitySet<FatturaAcquisto> FatturaAcquisto
		{
			get
			{
				return this._FatturaAcquisto;
			}
			set
			{
				this._FatturaAcquisto.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ordine_OrdineRicambio", Storage="_OrdineRicambio", ThisKey="Id", OtherKey="Ordine")]
		public EntitySet<OrdineRicambio> OrdineRicambio
		{
			get
			{
				return this._OrdineRicambio;
			}
			set
			{
				this._OrdineRicambio.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ordine_OrdineVeicolo", Storage="_OrdineVeicolo", ThisKey="Id", OtherKey="Ordine")]
		public EntitySet<OrdineVeicolo> OrdineVeicolo
		{
			get
			{
				return this._OrdineVeicolo;
			}
			set
			{
				this._OrdineVeicolo.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Fornitore_Ordine", Storage="_Fornitore1", ThisKey="Fornitore", OtherKey="PartitaIVA", IsForeignKey=true)]
		public Fornitore Fornitore1
		{
			get
			{
				return this._Fornitore1.Entity;
			}
			set
			{
				Fornitore previousValue = this._Fornitore1.Entity;
				if (((previousValue != value) 
							|| (this._Fornitore1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Fornitore1.Entity = null;
						previousValue.Ordine.Remove(this);
					}
					this._Fornitore1.Entity = value;
					if ((value != null))
					{
						value.Ordine.Add(this);
						this._Fornitore = value.PartitaIVA;
					}
					else
					{
						this._Fornitore = default(string);
					}
					this.SendPropertyChanged("Fornitore1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FatturaAcquisto(FatturaAcquisto entity)
		{
			this.SendPropertyChanging();
			entity.Ordine1 = this;
		}
		
		private void detach_FatturaAcquisto(FatturaAcquisto entity)
		{
			this.SendPropertyChanging();
			entity.Ordine1 = null;
		}
		
		private void attach_OrdineRicambio(OrdineRicambio entity)
		{
			this.SendPropertyChanging();
			entity.Ordine1 = this;
		}
		
		private void detach_OrdineRicambio(OrdineRicambio entity)
		{
			this.SendPropertyChanging();
			entity.Ordine1 = null;
		}
		
		private void attach_OrdineVeicolo(OrdineVeicolo entity)
		{
			this.SendPropertyChanging();
			entity.Ordine1 = this;
		}
		
		private void detach_OrdineVeicolo(OrdineVeicolo entity)
		{
			this.SendPropertyChanging();
			entity.Ordine1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrdineRicambio")]
	public partial class OrdineRicambio : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _Ordine;
		
		private string _Ricambio;
		
		private decimal _Quantità;
		
		private float _PrezzoUnitario;
		
		private EntityRef<Ordine> _Ordine1;
		
		private EntityRef<Ricambio> _Ricambio1;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOrdineChanging(decimal value);
    partial void OnOrdineChanged();
    partial void OnRicambioChanging(string value);
    partial void OnRicambioChanged();
    partial void OnQuantitàChanging(decimal value);
    partial void OnQuantitàChanged();
    partial void OnPrezzoUnitarioChanging(float value);
    partial void OnPrezzoUnitarioChanged();
    #endregion
		
		public OrdineRicambio()
		{
			this._Ordine1 = default(EntityRef<Ordine>);
			this._Ricambio1 = default(EntityRef<Ricambio>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ordine", DbType="Decimal(18,0) NOT NULL", IsPrimaryKey=true)]
		public decimal Ordine
		{
			get
			{
				return this._Ordine;
			}
			set
			{
				if ((this._Ordine != value))
				{
					if (this._Ordine1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrdineChanging(value);
					this.SendPropertyChanging();
					this._Ordine = value;
					this.SendPropertyChanged("Ordine");
					this.OnOrdineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ricambio", DbType="Char(6) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Ricambio
		{
			get
			{
				return this._Ricambio;
			}
			set
			{
				if ((this._Ricambio != value))
				{
					if (this._Ricambio1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRicambioChanging(value);
					this.SendPropertyChanging();
					this._Ricambio = value;
					this.SendPropertyChanged("Ricambio");
					this.OnRicambioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantità", DbType="Decimal(6,0) NOT NULL")]
		public decimal Quantità
		{
			get
			{
				return this._Quantità;
			}
			set
			{
				if ((this._Quantità != value))
				{
					this.OnQuantitàChanging(value);
					this.SendPropertyChanging();
					this._Quantità = value;
					this.SendPropertyChanged("Quantità");
					this.OnQuantitàChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrezzoUnitario", DbType="Real NOT NULL")]
		public float PrezzoUnitario
		{
			get
			{
				return this._PrezzoUnitario;
			}
			set
			{
				if ((this._PrezzoUnitario != value))
				{
					this.OnPrezzoUnitarioChanging(value);
					this.SendPropertyChanging();
					this._PrezzoUnitario = value;
					this.SendPropertyChanged("PrezzoUnitario");
					this.OnPrezzoUnitarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ordine_OrdineRicambio", Storage="_Ordine1", ThisKey="Ordine", OtherKey="Id", IsForeignKey=true)]
		public Ordine Ordine1
		{
			get
			{
				return this._Ordine1.Entity;
			}
			set
			{
				Ordine previousValue = this._Ordine1.Entity;
				if (((previousValue != value) 
							|| (this._Ordine1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ordine1.Entity = null;
						previousValue.OrdineRicambio.Remove(this);
					}
					this._Ordine1.Entity = value;
					if ((value != null))
					{
						value.OrdineRicambio.Add(this);
						this._Ordine = value.Id;
					}
					else
					{
						this._Ordine = default(decimal);
					}
					this.SendPropertyChanged("Ordine1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ricambio_OrdineRicambio", Storage="_Ricambio1", ThisKey="Ricambio", OtherKey="Codice", IsForeignKey=true)]
		public Ricambio Ricambio1
		{
			get
			{
				return this._Ricambio1.Entity;
			}
			set
			{
				Ricambio previousValue = this._Ricambio1.Entity;
				if (((previousValue != value) 
							|| (this._Ricambio1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ricambio1.Entity = null;
						previousValue.OrdineRicambio.Remove(this);
					}
					this._Ricambio1.Entity = value;
					if ((value != null))
					{
						value.OrdineRicambio.Add(this);
						this._Ricambio = value.Codice;
					}
					else
					{
						this._Ricambio = default(string);
					}
					this.SendPropertyChanged("Ricambio1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OrdineVeicolo")]
	public partial class OrdineVeicolo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _Veicolo;
		
		private float _PrezzoFornitore;
		
		private decimal _Ordine;
		
		private EntityRef<Ordine> _Ordine1;
		
		private EntityRef<VeicoloVenduto> _VeicoloVenduto;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVeicoloChanging(decimal value);
    partial void OnVeicoloChanged();
    partial void OnPrezzoFornitoreChanging(float value);
    partial void OnPrezzoFornitoreChanged();
    partial void OnOrdineChanging(decimal value);
    partial void OnOrdineChanged();
    #endregion
		
		public OrdineVeicolo()
		{
			this._Ordine1 = default(EntityRef<Ordine>);
			this._VeicoloVenduto = default(EntityRef<VeicoloVenduto>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Veicolo", DbType="Decimal(18,0) NOT NULL", IsPrimaryKey=true)]
		public decimal Veicolo
		{
			get
			{
				return this._Veicolo;
			}
			set
			{
				if ((this._Veicolo != value))
				{
					if (this._VeicoloVenduto.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVeicoloChanging(value);
					this.SendPropertyChanging();
					this._Veicolo = value;
					this.SendPropertyChanged("Veicolo");
					this.OnVeicoloChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrezzoFornitore", DbType="Real NOT NULL")]
		public float PrezzoFornitore
		{
			get
			{
				return this._PrezzoFornitore;
			}
			set
			{
				if ((this._PrezzoFornitore != value))
				{
					this.OnPrezzoFornitoreChanging(value);
					this.SendPropertyChanging();
					this._PrezzoFornitore = value;
					this.SendPropertyChanged("PrezzoFornitore");
					this.OnPrezzoFornitoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ordine", DbType="Decimal(18,0) NOT NULL")]
		public decimal Ordine
		{
			get
			{
				return this._Ordine;
			}
			set
			{
				if ((this._Ordine != value))
				{
					if (this._Ordine1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOrdineChanging(value);
					this.SendPropertyChanging();
					this._Ordine = value;
					this.SendPropertyChanged("Ordine");
					this.OnOrdineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ordine_OrdineVeicolo", Storage="_Ordine1", ThisKey="Ordine", OtherKey="Id", IsForeignKey=true)]
		public Ordine Ordine1
		{
			get
			{
				return this._Ordine1.Entity;
			}
			set
			{
				Ordine previousValue = this._Ordine1.Entity;
				if (((previousValue != value) 
							|| (this._Ordine1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ordine1.Entity = null;
						previousValue.OrdineVeicolo.Remove(this);
					}
					this._Ordine1.Entity = value;
					if ((value != null))
					{
						value.OrdineVeicolo.Add(this);
						this._Ordine = value.Id;
					}
					else
					{
						this._Ordine = default(decimal);
					}
					this.SendPropertyChanged("Ordine1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VeicoloVenduto_OrdineVeicolo", Storage="_VeicoloVenduto", ThisKey="Veicolo", OtherKey="Id", IsForeignKey=true)]
		public VeicoloVenduto VeicoloVenduto
		{
			get
			{
				return this._VeicoloVenduto.Entity;
			}
			set
			{
				VeicoloVenduto previousValue = this._VeicoloVenduto.Entity;
				if (((previousValue != value) 
							|| (this._VeicoloVenduto.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._VeicoloVenduto.Entity = null;
						previousValue.OrdineVeicolo = null;
					}
					this._VeicoloVenduto.Entity = value;
					if ((value != null))
					{
						value.OrdineVeicolo = this;
						this._Veicolo = value.Id;
					}
					else
					{
						this._Veicolo = default(decimal);
					}
					this.SendPropertyChanged("VeicoloVenduto");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Rata")]
	public partial class Rata : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _FornitoreFattura;
		
		private decimal _NumeroFattura;
		
		private System.DateTime _Scadenza;
		
		private float _Importo;
		
		private System.Nullable<System.DateTime> _DataPagamento;
		
		private EntityRef<FatturaAcquisto> _FatturaAcquisto;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFornitoreFatturaChanging(string value);
    partial void OnFornitoreFatturaChanged();
    partial void OnNumeroFatturaChanging(decimal value);
    partial void OnNumeroFatturaChanged();
    partial void OnScadenzaChanging(System.DateTime value);
    partial void OnScadenzaChanged();
    partial void OnImportoChanging(float value);
    partial void OnImportoChanged();
    partial void OnDataPagamentoChanging(System.Nullable<System.DateTime> value);
    partial void OnDataPagamentoChanged();
    #endregion
		
		public Rata()
		{
			this._FatturaAcquisto = default(EntityRef<FatturaAcquisto>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FornitoreFattura", DbType="Char(11) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string FornitoreFattura
		{
			get
			{
				return this._FornitoreFattura;
			}
			set
			{
				if ((this._FornitoreFattura != value))
				{
					if (this._FatturaAcquisto.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFornitoreFatturaChanging(value);
					this.SendPropertyChanging();
					this._FornitoreFattura = value;
					this.SendPropertyChanged("FornitoreFattura");
					this.OnFornitoreFatturaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumeroFattura", DbType="Decimal(6,0) NOT NULL", IsPrimaryKey=true)]
		public decimal NumeroFattura
		{
			get
			{
				return this._NumeroFattura;
			}
			set
			{
				if ((this._NumeroFattura != value))
				{
					if (this._FatturaAcquisto.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNumeroFatturaChanging(value);
					this.SendPropertyChanging();
					this._NumeroFattura = value;
					this.SendPropertyChanged("NumeroFattura");
					this.OnNumeroFatturaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Scadenza", DbType="Date NOT NULL", IsPrimaryKey=true)]
		public System.DateTime Scadenza
		{
			get
			{
				return this._Scadenza;
			}
			set
			{
				if ((this._Scadenza != value))
				{
					this.OnScadenzaChanging(value);
					this.SendPropertyChanging();
					this._Scadenza = value;
					this.SendPropertyChanged("Scadenza");
					this.OnScadenzaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Importo", DbType="Real NOT NULL")]
		public float Importo
		{
			get
			{
				return this._Importo;
			}
			set
			{
				if ((this._Importo != value))
				{
					this.OnImportoChanging(value);
					this.SendPropertyChanging();
					this._Importo = value;
					this.SendPropertyChanged("Importo");
					this.OnImportoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataPagamento", DbType="Date")]
		public System.Nullable<System.DateTime> DataPagamento
		{
			get
			{
				return this._DataPagamento;
			}
			set
			{
				if ((this._DataPagamento != value))
				{
					this.OnDataPagamentoChanging(value);
					this.SendPropertyChanging();
					this._DataPagamento = value;
					this.SendPropertyChanged("DataPagamento");
					this.OnDataPagamentoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FatturaAcquisto_Rata", Storage="_FatturaAcquisto", ThisKey="FornitoreFattura,NumeroFattura", OtherKey="Fornitore,Numero", IsForeignKey=true)]
		public FatturaAcquisto FatturaAcquisto
		{
			get
			{
				return this._FatturaAcquisto.Entity;
			}
			set
			{
				FatturaAcquisto previousValue = this._FatturaAcquisto.Entity;
				if (((previousValue != value) 
							|| (this._FatturaAcquisto.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FatturaAcquisto.Entity = null;
						previousValue.Rata.Remove(this);
					}
					this._FatturaAcquisto.Entity = value;
					if ((value != null))
					{
						value.Rata.Add(this);
						this._FornitoreFattura = value.Fornitore;
						this._NumeroFattura = value.Numero;
					}
					else
					{
						this._FornitoreFattura = default(string);
						this._NumeroFattura = default(decimal);
					}
					this.SendPropertyChanged("FatturaAcquisto");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RataCliente")]
	public partial class RataCliente : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _Contratto;
		
		private System.DateTime _Scadenza;
		
		private float _Importo;
		
		private System.Nullable<System.DateTime> _DataPagamento;
		
		private EntityRef<ContrattoVendita> _ContrattoVendita;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnContrattoChanging(decimal value);
    partial void OnContrattoChanged();
    partial void OnScadenzaChanging(System.DateTime value);
    partial void OnScadenzaChanged();
    partial void OnImportoChanging(float value);
    partial void OnImportoChanged();
    partial void OnDataPagamentoChanging(System.Nullable<System.DateTime> value);
    partial void OnDataPagamentoChanged();
    #endregion
		
		public RataCliente()
		{
			this._ContrattoVendita = default(EntityRef<ContrattoVendita>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contratto", DbType="Decimal(18,0) NOT NULL", IsPrimaryKey=true)]
		public decimal Contratto
		{
			get
			{
				return this._Contratto;
			}
			set
			{
				if ((this._Contratto != value))
				{
					if (this._ContrattoVendita.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContrattoChanging(value);
					this.SendPropertyChanging();
					this._Contratto = value;
					this.SendPropertyChanged("Contratto");
					this.OnContrattoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Scadenza", DbType="Date NOT NULL", IsPrimaryKey=true)]
		public System.DateTime Scadenza
		{
			get
			{
				return this._Scadenza;
			}
			set
			{
				if ((this._Scadenza != value))
				{
					this.OnScadenzaChanging(value);
					this.SendPropertyChanging();
					this._Scadenza = value;
					this.SendPropertyChanged("Scadenza");
					this.OnScadenzaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Importo", DbType="Real NOT NULL")]
		public float Importo
		{
			get
			{
				return this._Importo;
			}
			set
			{
				if ((this._Importo != value))
				{
					this.OnImportoChanging(value);
					this.SendPropertyChanging();
					this._Importo = value;
					this.SendPropertyChanged("Importo");
					this.OnImportoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataPagamento", DbType="Date")]
		public System.Nullable<System.DateTime> DataPagamento
		{
			get
			{
				return this._DataPagamento;
			}
			set
			{
				if ((this._DataPagamento != value))
				{
					this.OnDataPagamentoChanging(value);
					this.SendPropertyChanging();
					this._DataPagamento = value;
					this.SendPropertyChanged("DataPagamento");
					this.OnDataPagamentoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ContrattoVendita_RataCliente", Storage="_ContrattoVendita", ThisKey="Contratto", OtherKey="Numero", IsForeignKey=true)]
		public ContrattoVendita ContrattoVendita
		{
			get
			{
				return this._ContrattoVendita.Entity;
			}
			set
			{
				ContrattoVendita previousValue = this._ContrattoVendita.Entity;
				if (((previousValue != value) 
							|| (this._ContrattoVendita.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ContrattoVendita.Entity = null;
						previousValue.RataCliente.Remove(this);
					}
					this._ContrattoVendita.Entity = value;
					if ((value != null))
					{
						value.RataCliente.Add(this);
						this._Contratto = value.Numero;
					}
					else
					{
						this._Contratto = default(decimal);
					}
					this.SendPropertyChanged("ContrattoVendita");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Referenza")]
	public partial class Referenza : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _VeicoloCatalogo;
		
		private string _Ricambio;
		
		private EntityRef<Ricambio> _Ricambio1;
		
		private EntityRef<VeicoloCatalogo> _VeicoloCatalogo1;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVeicoloCatalogoChanging(string value);
    partial void OnVeicoloCatalogoChanged();
    partial void OnRicambioChanging(string value);
    partial void OnRicambioChanged();
    #endregion
		
		public Referenza()
		{
			this._Ricambio1 = default(EntityRef<Ricambio>);
			this._VeicoloCatalogo1 = default(EntityRef<VeicoloCatalogo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VeicoloCatalogo", DbType="Char(6) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string VeicoloCatalogo
		{
			get
			{
				return this._VeicoloCatalogo;
			}
			set
			{
				if ((this._VeicoloCatalogo != value))
				{
					if (this._VeicoloCatalogo1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVeicoloCatalogoChanging(value);
					this.SendPropertyChanging();
					this._VeicoloCatalogo = value;
					this.SendPropertyChanged("VeicoloCatalogo");
					this.OnVeicoloCatalogoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ricambio", DbType="Char(6) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Ricambio
		{
			get
			{
				return this._Ricambio;
			}
			set
			{
				if ((this._Ricambio != value))
				{
					if (this._Ricambio1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRicambioChanging(value);
					this.SendPropertyChanging();
					this._Ricambio = value;
					this.SendPropertyChanged("Ricambio");
					this.OnRicambioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ricambio_Referenza", Storage="_Ricambio1", ThisKey="Ricambio", OtherKey="Codice", IsForeignKey=true)]
		public Ricambio Ricambio1
		{
			get
			{
				return this._Ricambio1.Entity;
			}
			set
			{
				Ricambio previousValue = this._Ricambio1.Entity;
				if (((previousValue != value) 
							|| (this._Ricambio1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ricambio1.Entity = null;
						previousValue.Referenza.Remove(this);
					}
					this._Ricambio1.Entity = value;
					if ((value != null))
					{
						value.Referenza.Add(this);
						this._Ricambio = value.Codice;
					}
					else
					{
						this._Ricambio = default(string);
					}
					this.SendPropertyChanged("Ricambio1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VeicoloCatalogo_Referenza", Storage="_VeicoloCatalogo1", ThisKey="VeicoloCatalogo", OtherKey="Codice", IsForeignKey=true)]
		public VeicoloCatalogo VeicoloCatalogo1
		{
			get
			{
				return this._VeicoloCatalogo1.Entity;
			}
			set
			{
				VeicoloCatalogo previousValue = this._VeicoloCatalogo1.Entity;
				if (((previousValue != value) 
							|| (this._VeicoloCatalogo1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._VeicoloCatalogo1.Entity = null;
						previousValue.Referenza.Remove(this);
					}
					this._VeicoloCatalogo1.Entity = value;
					if ((value != null))
					{
						value.Referenza.Add(this);
						this._VeicoloCatalogo = value.Codice;
					}
					else
					{
						this._VeicoloCatalogo = default(string);
					}
					this.SendPropertyChanged("VeicoloCatalogo1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Revisione")]
	public partial class Revisione : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _VeicoloVenduto;
		
		private decimal _Numero;
		
		private System.DateTime _Scadenza;
		
		private System.Nullable<System.DateTime> _DataEsecuzione;
		
		private EntityRef<VeicoloVenduto> _VeicoloVenduto1;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVeicoloVendutoChanging(decimal value);
    partial void OnVeicoloVendutoChanged();
    partial void OnNumeroChanging(decimal value);
    partial void OnNumeroChanged();
    partial void OnScadenzaChanging(System.DateTime value);
    partial void OnScadenzaChanged();
    partial void OnDataEsecuzioneChanging(System.Nullable<System.DateTime> value);
    partial void OnDataEsecuzioneChanged();
    #endregion
		
		public Revisione()
		{
			this._VeicoloVenduto1 = default(EntityRef<VeicoloVenduto>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VeicoloVenduto", DbType="Decimal(18,0) NOT NULL", IsPrimaryKey=true)]
		public decimal VeicoloVenduto
		{
			get
			{
				return this._VeicoloVenduto;
			}
			set
			{
				if ((this._VeicoloVenduto != value))
				{
					if (this._VeicoloVenduto1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVeicoloVendutoChanging(value);
					this.SendPropertyChanging();
					this._VeicoloVenduto = value;
					this.SendPropertyChanged("VeicoloVenduto");
					this.OnVeicoloVendutoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Numero", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal Numero
		{
			get
			{
				return this._Numero;
			}
			set
			{
				if ((this._Numero != value))
				{
					this.OnNumeroChanging(value);
					this.SendPropertyChanging();
					this._Numero = value;
					this.SendPropertyChanged("Numero");
					this.OnNumeroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Scadenza", DbType="Date NOT NULL")]
		public System.DateTime Scadenza
		{
			get
			{
				return this._Scadenza;
			}
			set
			{
				if ((this._Scadenza != value))
				{
					this.OnScadenzaChanging(value);
					this.SendPropertyChanging();
					this._Scadenza = value;
					this.SendPropertyChanged("Scadenza");
					this.OnScadenzaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataEsecuzione", DbType="Date")]
		public System.Nullable<System.DateTime> DataEsecuzione
		{
			get
			{
				return this._DataEsecuzione;
			}
			set
			{
				if ((this._DataEsecuzione != value))
				{
					this.OnDataEsecuzioneChanging(value);
					this.SendPropertyChanging();
					this._DataEsecuzione = value;
					this.SendPropertyChanged("DataEsecuzione");
					this.OnDataEsecuzioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VeicoloVenduto_Revisione", Storage="_VeicoloVenduto1", ThisKey="VeicoloVenduto", OtherKey="Id", IsForeignKey=true)]
		public VeicoloVenduto VeicoloVenduto1
		{
			get
			{
				return this._VeicoloVenduto1.Entity;
			}
			set
			{
				VeicoloVenduto previousValue = this._VeicoloVenduto1.Entity;
				if (((previousValue != value) 
							|| (this._VeicoloVenduto1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._VeicoloVenduto1.Entity = null;
						previousValue.Revisione.Remove(this);
					}
					this._VeicoloVenduto1.Entity = value;
					if ((value != null))
					{
						value.Revisione.Add(this);
						this._VeicoloVenduto = value.Id;
					}
					else
					{
						this._VeicoloVenduto = default(decimal);
					}
					this.SendPropertyChanged("VeicoloVenduto1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ricambio")]
	public partial class Ricambio : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Codice;
		
		private string _Nome;
		
		private string _Descrizione;
		
		private float _PrezzoUnitarioRiparazione;
		
		private char _TipoRicambio;
		
		private string _Fornitore;
		
		private EntitySet<Giacenza> _Giacenza;
		
		private EntitySet<OrdineRicambio> _OrdineRicambio;
		
		private EntitySet<Referenza> _Referenza;
		
		private EntitySet<Utilizzo> _Utilizzo;
		
		private EntityRef<Fornitore> _Fornitore1;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodiceChanging(string value);
    partial void OnCodiceChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnDescrizioneChanging(string value);
    partial void OnDescrizioneChanged();
    partial void OnPrezzoUnitarioRiparazioneChanging(float value);
    partial void OnPrezzoUnitarioRiparazioneChanged();
    partial void OnTipoRicambioChanging(char value);
    partial void OnTipoRicambioChanged();
    partial void OnFornitoreChanging(string value);
    partial void OnFornitoreChanged();
    #endregion
		
		public Ricambio()
		{
			this._Giacenza = new EntitySet<Giacenza>(new Action<Giacenza>(this.attach_Giacenza), new Action<Giacenza>(this.detach_Giacenza));
			this._OrdineRicambio = new EntitySet<OrdineRicambio>(new Action<OrdineRicambio>(this.attach_OrdineRicambio), new Action<OrdineRicambio>(this.detach_OrdineRicambio));
			this._Referenza = new EntitySet<Referenza>(new Action<Referenza>(this.attach_Referenza), new Action<Referenza>(this.detach_Referenza));
			this._Utilizzo = new EntitySet<Utilizzo>(new Action<Utilizzo>(this.attach_Utilizzo), new Action<Utilizzo>(this.detach_Utilizzo));
			this._Fornitore1 = default(EntityRef<Fornitore>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codice", DbType="Char(6) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Codice
		{
			get
			{
				return this._Codice;
			}
			set
			{
				if ((this._Codice != value))
				{
					this.OnCodiceChanging(value);
					this.SendPropertyChanging();
					this._Codice = value;
					this.SendPropertyChanged("Codice");
					this.OnCodiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descrizione", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Descrizione
		{
			get
			{
				return this._Descrizione;
			}
			set
			{
				if ((this._Descrizione != value))
				{
					this.OnDescrizioneChanging(value);
					this.SendPropertyChanging();
					this._Descrizione = value;
					this.SendPropertyChanged("Descrizione");
					this.OnDescrizioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrezzoUnitarioRiparazione", DbType="Real NOT NULL")]
		public float PrezzoUnitarioRiparazione
		{
			get
			{
				return this._PrezzoUnitarioRiparazione;
			}
			set
			{
				if ((this._PrezzoUnitarioRiparazione != value))
				{
					this.OnPrezzoUnitarioRiparazioneChanging(value);
					this.SendPropertyChanging();
					this._PrezzoUnitarioRiparazione = value;
					this.SendPropertyChanged("PrezzoUnitarioRiparazione");
					this.OnPrezzoUnitarioRiparazioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TipoRicambio", DbType="Char(1) NOT NULL")]
		public char TipoRicambio
		{
			get
			{
				return this._TipoRicambio;
			}
			set
			{
				if ((this._TipoRicambio != value))
				{
					this.OnTipoRicambioChanging(value);
					this.SendPropertyChanging();
					this._TipoRicambio = value;
					this.SendPropertyChanged("TipoRicambio");
					this.OnTipoRicambioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fornitore", DbType="Char(11) NOT NULL", CanBeNull=false)]
		public string Fornitore
		{
			get
			{
				return this._Fornitore;
			}
			set
			{
				if ((this._Fornitore != value))
				{
					if (this._Fornitore1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFornitoreChanging(value);
					this.SendPropertyChanging();
					this._Fornitore = value;
					this.SendPropertyChanged("Fornitore");
					this.OnFornitoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ricambio_Giacenza", Storage="_Giacenza", ThisKey="Codice", OtherKey="Ricambio")]
		public EntitySet<Giacenza> Giacenza
		{
			get
			{
				return this._Giacenza;
			}
			set
			{
				this._Giacenza.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ricambio_OrdineRicambio", Storage="_OrdineRicambio", ThisKey="Codice", OtherKey="Ricambio")]
		public EntitySet<OrdineRicambio> OrdineRicambio
		{
			get
			{
				return this._OrdineRicambio;
			}
			set
			{
				this._OrdineRicambio.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ricambio_Referenza", Storage="_Referenza", ThisKey="Codice", OtherKey="Ricambio")]
		public EntitySet<Referenza> Referenza
		{
			get
			{
				return this._Referenza;
			}
			set
			{
				this._Referenza.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ricambio_Utilizzo", Storage="_Utilizzo", ThisKey="Codice", OtherKey="Ricambio")]
		public EntitySet<Utilizzo> Utilizzo
		{
			get
			{
				return this._Utilizzo;
			}
			set
			{
				this._Utilizzo.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Fornitore_Ricambio", Storage="_Fornitore1", ThisKey="Fornitore", OtherKey="PartitaIVA", IsForeignKey=true)]
		public Fornitore Fornitore1
		{
			get
			{
				return this._Fornitore1.Entity;
			}
			set
			{
				Fornitore previousValue = this._Fornitore1.Entity;
				if (((previousValue != value) 
							|| (this._Fornitore1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Fornitore1.Entity = null;
						previousValue.Ricambio.Remove(this);
					}
					this._Fornitore1.Entity = value;
					if ((value != null))
					{
						value.Ricambio.Add(this);
						this._Fornitore = value.PartitaIVA;
					}
					else
					{
						this._Fornitore = default(string);
					}
					this.SendPropertyChanged("Fornitore1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Giacenza(Giacenza entity)
		{
			this.SendPropertyChanging();
			entity.Ricambio1 = this;
		}
		
		private void detach_Giacenza(Giacenza entity)
		{
			this.SendPropertyChanging();
			entity.Ricambio1 = null;
		}
		
		private void attach_OrdineRicambio(OrdineRicambio entity)
		{
			this.SendPropertyChanging();
			entity.Ricambio1 = this;
		}
		
		private void detach_OrdineRicambio(OrdineRicambio entity)
		{
			this.SendPropertyChanging();
			entity.Ricambio1 = null;
		}
		
		private void attach_Referenza(Referenza entity)
		{
			this.SendPropertyChanging();
			entity.Ricambio1 = this;
		}
		
		private void detach_Referenza(Referenza entity)
		{
			this.SendPropertyChanging();
			entity.Ricambio1 = null;
		}
		
		private void attach_Utilizzo(Utilizzo entity)
		{
			this.SendPropertyChanging();
			entity.Ricambio1 = this;
		}
		
		private void detach_Utilizzo(Utilizzo entity)
		{
			this.SendPropertyChanging();
			entity.Ricambio1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Riparazione")]
	public partial class Riparazione : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _Veicolo;
		
		private decimal _Numero;
		
		private System.DateTime _Data;
		
		private float _ImportoComplessivo;
		
		private EntitySet<Utilizzo> _Utilizzo;
		
		private EntityRef<VeicoloVenduto> _VeicoloVenduto;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVeicoloChanging(decimal value);
    partial void OnVeicoloChanged();
    partial void OnNumeroChanging(decimal value);
    partial void OnNumeroChanged();
    partial void OnDataChanging(System.DateTime value);
    partial void OnDataChanged();
    partial void OnImportoComplessivoChanging(float value);
    partial void OnImportoComplessivoChanged();
    #endregion
		
		public Riparazione()
		{
			this._Utilizzo = new EntitySet<Utilizzo>(new Action<Utilizzo>(this.attach_Utilizzo), new Action<Utilizzo>(this.detach_Utilizzo));
			this._VeicoloVenduto = default(EntityRef<VeicoloVenduto>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Veicolo", DbType="Decimal(18,0) NOT NULL", IsPrimaryKey=true)]
		public decimal Veicolo
		{
			get
			{
				return this._Veicolo;
			}
			set
			{
				if ((this._Veicolo != value))
				{
					if (this._VeicoloVenduto.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVeicoloChanging(value);
					this.SendPropertyChanging();
					this._Veicolo = value;
					this.SendPropertyChanged("Veicolo");
					this.OnVeicoloChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Numero", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal Numero
		{
			get
			{
				return this._Numero;
			}
			set
			{
				if ((this._Numero != value))
				{
					this.OnNumeroChanging(value);
					this.SendPropertyChanging();
					this._Numero = value;
					this.SendPropertyChanged("Numero");
					this.OnNumeroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data", DbType="Date NOT NULL")]
		public System.DateTime Data
		{
			get
			{
				return this._Data;
			}
			set
			{
				if ((this._Data != value))
				{
					this.OnDataChanging(value);
					this.SendPropertyChanging();
					this._Data = value;
					this.SendPropertyChanged("Data");
					this.OnDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImportoComplessivo", DbType="Real NOT NULL")]
		public float ImportoComplessivo
		{
			get
			{
				return this._ImportoComplessivo;
			}
			set
			{
				if ((this._ImportoComplessivo != value))
				{
					this.OnImportoComplessivoChanging(value);
					this.SendPropertyChanging();
					this._ImportoComplessivo = value;
					this.SendPropertyChanged("ImportoComplessivo");
					this.OnImportoComplessivoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Riparazione_Utilizzo", Storage="_Utilizzo", ThisKey="Veicolo,Numero", OtherKey="Veicolo,Numero")]
		public EntitySet<Utilizzo> Utilizzo
		{
			get
			{
				return this._Utilizzo;
			}
			set
			{
				this._Utilizzo.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VeicoloVenduto_Riparazione", Storage="_VeicoloVenduto", ThisKey="Veicolo", OtherKey="Id", IsForeignKey=true)]
		public VeicoloVenduto VeicoloVenduto
		{
			get
			{
				return this._VeicoloVenduto.Entity;
			}
			set
			{
				VeicoloVenduto previousValue = this._VeicoloVenduto.Entity;
				if (((previousValue != value) 
							|| (this._VeicoloVenduto.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._VeicoloVenduto.Entity = null;
						previousValue.Riparazione.Remove(this);
					}
					this._VeicoloVenduto.Entity = value;
					if ((value != null))
					{
						value.Riparazione.Add(this);
						this._Veicolo = value.Id;
					}
					else
					{
						this._Veicolo = default(decimal);
					}
					this.SendPropertyChanged("VeicoloVenduto");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Utilizzo(Utilizzo entity)
		{
			this.SendPropertyChanging();
			entity.Riparazione = this;
		}
		
		private void detach_Utilizzo(Utilizzo entity)
		{
			this.SendPropertyChanging();
			entity.Riparazione = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Supporto")]
	public partial class Supporto : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _VeicoloCatalogo;
		
		private string _Optional;
		
		private EntityRef<Optional> _Optional1;
		
		private EntityRef<VeicoloCatalogo> _VeicoloCatalogo1;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVeicoloCatalogoChanging(string value);
    partial void OnVeicoloCatalogoChanged();
    partial void OnOptionalChanging(string value);
    partial void OnOptionalChanged();
    #endregion
		
		public Supporto()
		{
			this._Optional1 = default(EntityRef<Optional>);
			this._VeicoloCatalogo1 = default(EntityRef<VeicoloCatalogo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VeicoloCatalogo", DbType="Char(6) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string VeicoloCatalogo
		{
			get
			{
				return this._VeicoloCatalogo;
			}
			set
			{
				if ((this._VeicoloCatalogo != value))
				{
					if (this._VeicoloCatalogo1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVeicoloCatalogoChanging(value);
					this.SendPropertyChanging();
					this._VeicoloCatalogo = value;
					this.SendPropertyChanged("VeicoloCatalogo");
					this.OnVeicoloCatalogoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Optional", DbType="Char(6) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Optional
		{
			get
			{
				return this._Optional;
			}
			set
			{
				if ((this._Optional != value))
				{
					if (this._Optional1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOptionalChanging(value);
					this.SendPropertyChanging();
					this._Optional = value;
					this.SendPropertyChanged("Optional");
					this.OnOptionalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Optional_Supporto", Storage="_Optional1", ThisKey="Optional", OtherKey="Codice", IsForeignKey=true)]
		public Optional Optional1
		{
			get
			{
				return this._Optional1.Entity;
			}
			set
			{
				Optional previousValue = this._Optional1.Entity;
				if (((previousValue != value) 
							|| (this._Optional1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Optional1.Entity = null;
						previousValue.Supporto.Remove(this);
					}
					this._Optional1.Entity = value;
					if ((value != null))
					{
						value.Supporto.Add(this);
						this._Optional = value.Codice;
					}
					else
					{
						this._Optional = default(string);
					}
					this.SendPropertyChanged("Optional1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VeicoloCatalogo_Supporto", Storage="_VeicoloCatalogo1", ThisKey="VeicoloCatalogo", OtherKey="Codice", IsForeignKey=true)]
		public VeicoloCatalogo VeicoloCatalogo1
		{
			get
			{
				return this._VeicoloCatalogo1.Entity;
			}
			set
			{
				VeicoloCatalogo previousValue = this._VeicoloCatalogo1.Entity;
				if (((previousValue != value) 
							|| (this._VeicoloCatalogo1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._VeicoloCatalogo1.Entity = null;
						previousValue.Supporto.Remove(this);
					}
					this._VeicoloCatalogo1.Entity = value;
					if ((value != null))
					{
						value.Supporto.Add(this);
						this._VeicoloCatalogo = value.Codice;
					}
					else
					{
						this._VeicoloCatalogo = default(string);
					}
					this.SendPropertyChanged("VeicoloCatalogo1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Trasporto")]
	public partial class Trasporto : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Codice;
		
		private System.Nullable<float> _Costo;
		
		private System.DateTime _DataConsegnaPrevista;
		
		private System.Nullable<System.DateTime> _DataConsegna;
		
		private string _IndirizzoConsegna;
		
		private string _CittàConsegna;
		
		private string _ProvinciaConsegna;
		
		private string _Corriere;
		
		private decimal _ContrattoNumero;
		
		private EntityRef<ContrattoVendita> _ContrattoVendita;
		
		private EntityRef<Corriere> _Corriere1;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodiceChanging(string value);
    partial void OnCodiceChanged();
    partial void OnCostoChanging(System.Nullable<float> value);
    partial void OnCostoChanged();
    partial void OnDataConsegnaPrevistaChanging(System.DateTime value);
    partial void OnDataConsegnaPrevistaChanged();
    partial void OnDataConsegnaChanging(System.Nullable<System.DateTime> value);
    partial void OnDataConsegnaChanged();
    partial void OnIndirizzoConsegnaChanging(string value);
    partial void OnIndirizzoConsegnaChanged();
    partial void OnCittàConsegnaChanging(string value);
    partial void OnCittàConsegnaChanged();
    partial void OnProvinciaConsegnaChanging(string value);
    partial void OnProvinciaConsegnaChanged();
    partial void OnCorriereChanging(string value);
    partial void OnCorriereChanged();
    partial void OnContrattoNumeroChanging(decimal value);
    partial void OnContrattoNumeroChanged();
    #endregion
		
		public Trasporto()
		{
			this._ContrattoVendita = default(EntityRef<ContrattoVendita>);
			this._Corriere1 = default(EntityRef<Corriere>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codice", DbType="Char(6) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Codice
		{
			get
			{
				return this._Codice;
			}
			set
			{
				if ((this._Codice != value))
				{
					this.OnCodiceChanging(value);
					this.SendPropertyChanging();
					this._Codice = value;
					this.SendPropertyChanged("Codice");
					this.OnCodiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Costo", DbType="Real")]
		public System.Nullable<float> Costo
		{
			get
			{
				return this._Costo;
			}
			set
			{
				if ((this._Costo != value))
				{
					this.OnCostoChanging(value);
					this.SendPropertyChanging();
					this._Costo = value;
					this.SendPropertyChanged("Costo");
					this.OnCostoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataConsegnaPrevista", DbType="Date NOT NULL")]
		public System.DateTime DataConsegnaPrevista
		{
			get
			{
				return this._DataConsegnaPrevista;
			}
			set
			{
				if ((this._DataConsegnaPrevista != value))
				{
					this.OnDataConsegnaPrevistaChanging(value);
					this.SendPropertyChanging();
					this._DataConsegnaPrevista = value;
					this.SendPropertyChanged("DataConsegnaPrevista");
					this.OnDataConsegnaPrevistaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataConsegna", DbType="Date")]
		public System.Nullable<System.DateTime> DataConsegna
		{
			get
			{
				return this._DataConsegna;
			}
			set
			{
				if ((this._DataConsegna != value))
				{
					this.OnDataConsegnaChanging(value);
					this.SendPropertyChanging();
					this._DataConsegna = value;
					this.SendPropertyChanged("DataConsegna");
					this.OnDataConsegnaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IndirizzoConsegna", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string IndirizzoConsegna
		{
			get
			{
				return this._IndirizzoConsegna;
			}
			set
			{
				if ((this._IndirizzoConsegna != value))
				{
					this.OnIndirizzoConsegnaChanging(value);
					this.SendPropertyChanging();
					this._IndirizzoConsegna = value;
					this.SendPropertyChanged("IndirizzoConsegna");
					this.OnIndirizzoConsegnaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CittàConsegna", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string CittàConsegna
		{
			get
			{
				return this._CittàConsegna;
			}
			set
			{
				if ((this._CittàConsegna != value))
				{
					this.OnCittàConsegnaChanging(value);
					this.SendPropertyChanging();
					this._CittàConsegna = value;
					this.SendPropertyChanged("CittàConsegna");
					this.OnCittàConsegnaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProvinciaConsegna", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string ProvinciaConsegna
		{
			get
			{
				return this._ProvinciaConsegna;
			}
			set
			{
				if ((this._ProvinciaConsegna != value))
				{
					this.OnProvinciaConsegnaChanging(value);
					this.SendPropertyChanging();
					this._ProvinciaConsegna = value;
					this.SendPropertyChanged("ProvinciaConsegna");
					this.OnProvinciaConsegnaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Corriere", DbType="Char(11)")]
		public string Corriere
		{
			get
			{
				return this._Corriere;
			}
			set
			{
				if ((this._Corriere != value))
				{
					if (this._Corriere1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCorriereChanging(value);
					this.SendPropertyChanging();
					this._Corriere = value;
					this.SendPropertyChanged("Corriere");
					this.OnCorriereChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContrattoNumero", DbType="Decimal(18,0) NOT NULL")]
		public decimal ContrattoNumero
		{
			get
			{
				return this._ContrattoNumero;
			}
			set
			{
				if ((this._ContrattoNumero != value))
				{
					if (this._ContrattoVendita.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContrattoNumeroChanging(value);
					this.SendPropertyChanging();
					this._ContrattoNumero = value;
					this.SendPropertyChanged("ContrattoNumero");
					this.OnContrattoNumeroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ContrattoVendita_Trasporto", Storage="_ContrattoVendita", ThisKey="ContrattoNumero", OtherKey="Numero", IsForeignKey=true)]
		public ContrattoVendita ContrattoVendita
		{
			get
			{
				return this._ContrattoVendita.Entity;
			}
			set
			{
				ContrattoVendita previousValue = this._ContrattoVendita.Entity;
				if (((previousValue != value) 
							|| (this._ContrattoVendita.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ContrattoVendita.Entity = null;
						previousValue.Trasporto.Remove(this);
					}
					this._ContrattoVendita.Entity = value;
					if ((value != null))
					{
						value.Trasporto.Add(this);
						this._ContrattoNumero = value.Numero;
					}
					else
					{
						this._ContrattoNumero = default(decimal);
					}
					this.SendPropertyChanged("ContrattoVendita");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Corriere_Trasporto", Storage="_Corriere1", ThisKey="Corriere", OtherKey="PartitaIVA", IsForeignKey=true)]
		public Corriere Corriere1
		{
			get
			{
				return this._Corriere1.Entity;
			}
			set
			{
				Corriere previousValue = this._Corriere1.Entity;
				if (((previousValue != value) 
							|| (this._Corriere1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Corriere1.Entity = null;
						previousValue.Trasporto.Remove(this);
					}
					this._Corriere1.Entity = value;
					if ((value != null))
					{
						value.Trasporto.Add(this);
						this._Corriere = value.PartitaIVA;
					}
					else
					{
						this._Corriere = default(string);
					}
					this.SendPropertyChanged("Corriere1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Utilizzo")]
	public partial class Utilizzo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Ricambio;
		
		private decimal _Veicolo;
		
		private decimal _Numero;
		
		private decimal _Quantità;
		
		private EntityRef<Ricambio> _Ricambio1;
		
		private EntityRef<Riparazione> _Riparazione;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRicambioChanging(string value);
    partial void OnRicambioChanged();
    partial void OnVeicoloChanging(decimal value);
    partial void OnVeicoloChanged();
    partial void OnNumeroChanging(decimal value);
    partial void OnNumeroChanged();
    partial void OnQuantitàChanging(decimal value);
    partial void OnQuantitàChanged();
    #endregion
		
		public Utilizzo()
		{
			this._Ricambio1 = default(EntityRef<Ricambio>);
			this._Riparazione = default(EntityRef<Riparazione>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ricambio", DbType="Char(6) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Ricambio
		{
			get
			{
				return this._Ricambio;
			}
			set
			{
				if ((this._Ricambio != value))
				{
					if (this._Ricambio1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRicambioChanging(value);
					this.SendPropertyChanging();
					this._Ricambio = value;
					this.SendPropertyChanged("Ricambio");
					this.OnRicambioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Veicolo", DbType="Decimal(18,0) NOT NULL", IsPrimaryKey=true)]
		public decimal Veicolo
		{
			get
			{
				return this._Veicolo;
			}
			set
			{
				if ((this._Veicolo != value))
				{
					if (this._Riparazione.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVeicoloChanging(value);
					this.SendPropertyChanging();
					this._Veicolo = value;
					this.SendPropertyChanged("Veicolo");
					this.OnVeicoloChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Numero", DbType="Decimal(18,0) NOT NULL", IsPrimaryKey=true)]
		public decimal Numero
		{
			get
			{
				return this._Numero;
			}
			set
			{
				if ((this._Numero != value))
				{
					if (this._Riparazione.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNumeroChanging(value);
					this.SendPropertyChanging();
					this._Numero = value;
					this.SendPropertyChanged("Numero");
					this.OnNumeroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantità", DbType="Decimal(6,0) NOT NULL")]
		public decimal Quantità
		{
			get
			{
				return this._Quantità;
			}
			set
			{
				if ((this._Quantità != value))
				{
					this.OnQuantitàChanging(value);
					this.SendPropertyChanging();
					this._Quantità = value;
					this.SendPropertyChanged("Quantità");
					this.OnQuantitàChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ricambio_Utilizzo", Storage="_Ricambio1", ThisKey="Ricambio", OtherKey="Codice", IsForeignKey=true)]
		public Ricambio Ricambio1
		{
			get
			{
				return this._Ricambio1.Entity;
			}
			set
			{
				Ricambio previousValue = this._Ricambio1.Entity;
				if (((previousValue != value) 
							|| (this._Ricambio1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ricambio1.Entity = null;
						previousValue.Utilizzo.Remove(this);
					}
					this._Ricambio1.Entity = value;
					if ((value != null))
					{
						value.Utilizzo.Add(this);
						this._Ricambio = value.Codice;
					}
					else
					{
						this._Ricambio = default(string);
					}
					this.SendPropertyChanged("Ricambio1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Riparazione_Utilizzo", Storage="_Riparazione", ThisKey="Veicolo,Numero", OtherKey="Veicolo,Numero", IsForeignKey=true)]
		public Riparazione Riparazione
		{
			get
			{
				return this._Riparazione.Entity;
			}
			set
			{
				Riparazione previousValue = this._Riparazione.Entity;
				if (((previousValue != value) 
							|| (this._Riparazione.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Riparazione.Entity = null;
						previousValue.Utilizzo.Remove(this);
					}
					this._Riparazione.Entity = value;
					if ((value != null))
					{
						value.Utilizzo.Add(this);
						this._Veicolo = value.Veicolo;
						this._Numero = value.Numero;
					}
					else
					{
						this._Veicolo = default(decimal);
						this._Numero = default(decimal);
					}
					this.SendPropertyChanged("Riparazione");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VeicoloCatalogo")]
	public partial class VeicoloCatalogo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Codice;
		
		private float _PrezzoBase;
		
		private float _Potenza;
		
		private decimal _NumPosti;
		
		private float _Consumi;
		
		private string _Omologazione;
		
		private float _CapacitàSerbatorio;
		
		private string _TipoAlimentazione;
		
		private float _Cilindrata;
		
		private string _Trazione;
		
		private string _Cambio;
		
		private float _CapienzaBagagliaio;
		
		private decimal _NumPorte;
		
		private string _NomeModello;
		
		private decimal _AnnoModello;
		
		private string _CasaProduttrice;
		
		private EntitySet<Referenza> _Referenza;
		
		private EntitySet<Supporto> _Supporto;
		
		private EntitySet<VeicoloVenduto> _VeicoloVenduto;
		
		private EntityRef<ModelloVeicolo> _ModelloVeicolo;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodiceChanging(string value);
    partial void OnCodiceChanged();
    partial void OnPrezzoBaseChanging(float value);
    partial void OnPrezzoBaseChanged();
    partial void OnPotenzaChanging(float value);
    partial void OnPotenzaChanged();
    partial void OnNumPostiChanging(decimal value);
    partial void OnNumPostiChanged();
    partial void OnConsumiChanging(float value);
    partial void OnConsumiChanged();
    partial void OnOmologazioneChanging(string value);
    partial void OnOmologazioneChanged();
    partial void OnCapacitàSerbatorioChanging(float value);
    partial void OnCapacitàSerbatorioChanged();
    partial void OnTipoAlimentazioneChanging(string value);
    partial void OnTipoAlimentazioneChanged();
    partial void OnCilindrataChanging(float value);
    partial void OnCilindrataChanged();
    partial void OnTrazioneChanging(string value);
    partial void OnTrazioneChanged();
    partial void OnCambioChanging(string value);
    partial void OnCambioChanged();
    partial void OnCapienzaBagagliaioChanging(float value);
    partial void OnCapienzaBagagliaioChanged();
    partial void OnNumPorteChanging(decimal value);
    partial void OnNumPorteChanged();
    partial void OnNomeModelloChanging(string value);
    partial void OnNomeModelloChanged();
    partial void OnAnnoModelloChanging(decimal value);
    partial void OnAnnoModelloChanged();
    partial void OnCasaProduttriceChanging(string value);
    partial void OnCasaProduttriceChanged();
    #endregion
		
		public VeicoloCatalogo()
		{
			this._Referenza = new EntitySet<Referenza>(new Action<Referenza>(this.attach_Referenza), new Action<Referenza>(this.detach_Referenza));
			this._Supporto = new EntitySet<Supporto>(new Action<Supporto>(this.attach_Supporto), new Action<Supporto>(this.detach_Supporto));
			this._VeicoloVenduto = new EntitySet<VeicoloVenduto>(new Action<VeicoloVenduto>(this.attach_VeicoloVenduto), new Action<VeicoloVenduto>(this.detach_VeicoloVenduto));
			this._ModelloVeicolo = default(EntityRef<ModelloVeicolo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Codice", DbType="Char(6) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Codice
		{
			get
			{
				return this._Codice;
			}
			set
			{
				if ((this._Codice != value))
				{
					this.OnCodiceChanging(value);
					this.SendPropertyChanging();
					this._Codice = value;
					this.SendPropertyChanged("Codice");
					this.OnCodiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrezzoBase", DbType="Real NOT NULL")]
		public float PrezzoBase
		{
			get
			{
				return this._PrezzoBase;
			}
			set
			{
				if ((this._PrezzoBase != value))
				{
					this.OnPrezzoBaseChanging(value);
					this.SendPropertyChanging();
					this._PrezzoBase = value;
					this.SendPropertyChanged("PrezzoBase");
					this.OnPrezzoBaseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Potenza", DbType="Real NOT NULL")]
		public float Potenza
		{
			get
			{
				return this._Potenza;
			}
			set
			{
				if ((this._Potenza != value))
				{
					this.OnPotenzaChanging(value);
					this.SendPropertyChanging();
					this._Potenza = value;
					this.SendPropertyChanged("Potenza");
					this.OnPotenzaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumPosti", DbType="Decimal(1,0) NOT NULL")]
		public decimal NumPosti
		{
			get
			{
				return this._NumPosti;
			}
			set
			{
				if ((this._NumPosti != value))
				{
					this.OnNumPostiChanging(value);
					this.SendPropertyChanging();
					this._NumPosti = value;
					this.SendPropertyChanged("NumPosti");
					this.OnNumPostiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Consumi", DbType="Real NOT NULL")]
		public float Consumi
		{
			get
			{
				return this._Consumi;
			}
			set
			{
				if ((this._Consumi != value))
				{
					this.OnConsumiChanging(value);
					this.SendPropertyChanging();
					this._Consumi = value;
					this.SendPropertyChanged("Consumi");
					this.OnConsumiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Omologazione", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Omologazione
		{
			get
			{
				return this._Omologazione;
			}
			set
			{
				if ((this._Omologazione != value))
				{
					this.OnOmologazioneChanging(value);
					this.SendPropertyChanging();
					this._Omologazione = value;
					this.SendPropertyChanged("Omologazione");
					this.OnOmologazioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CapacitàSerbatorio", DbType="Real NOT NULL")]
		public float CapacitàSerbatorio
		{
			get
			{
				return this._CapacitàSerbatorio;
			}
			set
			{
				if ((this._CapacitàSerbatorio != value))
				{
					this.OnCapacitàSerbatorioChanging(value);
					this.SendPropertyChanging();
					this._CapacitàSerbatorio = value;
					this.SendPropertyChanged("CapacitàSerbatorio");
					this.OnCapacitàSerbatorioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TipoAlimentazione", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string TipoAlimentazione
		{
			get
			{
				return this._TipoAlimentazione;
			}
			set
			{
				if ((this._TipoAlimentazione != value))
				{
					this.OnTipoAlimentazioneChanging(value);
					this.SendPropertyChanging();
					this._TipoAlimentazione = value;
					this.SendPropertyChanged("TipoAlimentazione");
					this.OnTipoAlimentazioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cilindrata", DbType="Real NOT NULL")]
		public float Cilindrata
		{
			get
			{
				return this._Cilindrata;
			}
			set
			{
				if ((this._Cilindrata != value))
				{
					this.OnCilindrataChanging(value);
					this.SendPropertyChanging();
					this._Cilindrata = value;
					this.SendPropertyChanged("Cilindrata");
					this.OnCilindrataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Trazione", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Trazione
		{
			get
			{
				return this._Trazione;
			}
			set
			{
				if ((this._Trazione != value))
				{
					this.OnTrazioneChanging(value);
					this.SendPropertyChanging();
					this._Trazione = value;
					this.SendPropertyChanged("Trazione");
					this.OnTrazioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cambio", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Cambio
		{
			get
			{
				return this._Cambio;
			}
			set
			{
				if ((this._Cambio != value))
				{
					this.OnCambioChanging(value);
					this.SendPropertyChanging();
					this._Cambio = value;
					this.SendPropertyChanged("Cambio");
					this.OnCambioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CapienzaBagagliaio", DbType="Real NOT NULL")]
		public float CapienzaBagagliaio
		{
			get
			{
				return this._CapienzaBagagliaio;
			}
			set
			{
				if ((this._CapienzaBagagliaio != value))
				{
					this.OnCapienzaBagagliaioChanging(value);
					this.SendPropertyChanging();
					this._CapienzaBagagliaio = value;
					this.SendPropertyChanged("CapienzaBagagliaio");
					this.OnCapienzaBagagliaioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumPorte", DbType="Decimal(1,0) NOT NULL")]
		public decimal NumPorte
		{
			get
			{
				return this._NumPorte;
			}
			set
			{
				if ((this._NumPorte != value))
				{
					this.OnNumPorteChanging(value);
					this.SendPropertyChanging();
					this._NumPorte = value;
					this.SendPropertyChanged("NumPorte");
					this.OnNumPorteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NomeModello", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string NomeModello
		{
			get
			{
				return this._NomeModello;
			}
			set
			{
				if ((this._NomeModello != value))
				{
					if (this._ModelloVeicolo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNomeModelloChanging(value);
					this.SendPropertyChanging();
					this._NomeModello = value;
					this.SendPropertyChanged("NomeModello");
					this.OnNomeModelloChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnnoModello", DbType="Decimal(4,0) NOT NULL")]
		public decimal AnnoModello
		{
			get
			{
				return this._AnnoModello;
			}
			set
			{
				if ((this._AnnoModello != value))
				{
					if (this._ModelloVeicolo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAnnoModelloChanging(value);
					this.SendPropertyChanging();
					this._AnnoModello = value;
					this.SendPropertyChanged("AnnoModello");
					this.OnAnnoModelloChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CasaProduttrice", DbType="Char(11) NOT NULL", CanBeNull=false)]
		public string CasaProduttrice
		{
			get
			{
				return this._CasaProduttrice;
			}
			set
			{
				if ((this._CasaProduttrice != value))
				{
					if (this._ModelloVeicolo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCasaProduttriceChanging(value);
					this.SendPropertyChanging();
					this._CasaProduttrice = value;
					this.SendPropertyChanged("CasaProduttrice");
					this.OnCasaProduttriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VeicoloCatalogo_Referenza", Storage="_Referenza", ThisKey="Codice", OtherKey="VeicoloCatalogo")]
		public EntitySet<Referenza> Referenza
		{
			get
			{
				return this._Referenza;
			}
			set
			{
				this._Referenza.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VeicoloCatalogo_Supporto", Storage="_Supporto", ThisKey="Codice", OtherKey="VeicoloCatalogo")]
		public EntitySet<Supporto> Supporto
		{
			get
			{
				return this._Supporto;
			}
			set
			{
				this._Supporto.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VeicoloCatalogo_VeicoloVenduto", Storage="_VeicoloVenduto", ThisKey="Codice", OtherKey="VeicoloCatalogo")]
		public EntitySet<VeicoloVenduto> VeicoloVenduto
		{
			get
			{
				return this._VeicoloVenduto;
			}
			set
			{
				this._VeicoloVenduto.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ModelloVeicolo_VeicoloCatalogo", Storage="_ModelloVeicolo", ThisKey="NomeModello,AnnoModello,CasaProduttrice", OtherKey="Nome,Anno,CasaProduttrice", IsForeignKey=true)]
		public ModelloVeicolo ModelloVeicolo
		{
			get
			{
				return this._ModelloVeicolo.Entity;
			}
			set
			{
				ModelloVeicolo previousValue = this._ModelloVeicolo.Entity;
				if (((previousValue != value) 
							|| (this._ModelloVeicolo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ModelloVeicolo.Entity = null;
						previousValue.VeicoloCatalogo.Remove(this);
					}
					this._ModelloVeicolo.Entity = value;
					if ((value != null))
					{
						value.VeicoloCatalogo.Add(this);
						this._NomeModello = value.Nome;
						this._AnnoModello = value.Anno;
						this._CasaProduttrice = value.CasaProduttrice;
					}
					else
					{
						this._NomeModello = default(string);
						this._AnnoModello = default(decimal);
						this._CasaProduttrice = default(string);
					}
					this.SendPropertyChanged("ModelloVeicolo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Referenza(Referenza entity)
		{
			this.SendPropertyChanging();
			entity.VeicoloCatalogo1 = this;
		}
		
		private void detach_Referenza(Referenza entity)
		{
			this.SendPropertyChanging();
			entity.VeicoloCatalogo1 = null;
		}
		
		private void attach_Supporto(Supporto entity)
		{
			this.SendPropertyChanging();
			entity.VeicoloCatalogo1 = this;
		}
		
		private void detach_Supporto(Supporto entity)
		{
			this.SendPropertyChanging();
			entity.VeicoloCatalogo1 = null;
		}
		
		private void attach_VeicoloVenduto(VeicoloVenduto entity)
		{
			this.SendPropertyChanging();
			entity.VeicoloCatalogo1 = this;
		}
		
		private void detach_VeicoloVenduto(VeicoloVenduto entity)
		{
			this.SendPropertyChanging();
			entity.VeicoloCatalogo1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VeicoloVenduto")]
	public partial class VeicoloVenduto : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private decimal _Id;
		
		private string _Telaio;
		
		private decimal _Contratto;
		
		private string _VeicoloCatalogo;
		
		private EntitySet<Dotazione> _Dotazione;
		
		private EntityRef<OrdineVeicolo> _OrdineVeicolo;
		
		private EntitySet<Revisione> _Revisione;
		
		private EntitySet<Riparazione> _Riparazione;
		
		private EntityRef<ContrattoVendita> _ContrattoVendita;
		
		private EntityRef<VeicoloCatalogo> _VeicoloCatalogo1;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(decimal value);
    partial void OnIdChanged();
    partial void OnTelaioChanging(string value);
    partial void OnTelaioChanged();
    partial void OnContrattoChanging(decimal value);
    partial void OnContrattoChanged();
    partial void OnVeicoloCatalogoChanging(string value);
    partial void OnVeicoloCatalogoChanged();
    #endregion
		
		public VeicoloVenduto()
		{
			this._Dotazione = new EntitySet<Dotazione>(new Action<Dotazione>(this.attach_Dotazione), new Action<Dotazione>(this.detach_Dotazione));
			this._OrdineVeicolo = default(EntityRef<OrdineVeicolo>);
			this._Revisione = new EntitySet<Revisione>(new Action<Revisione>(this.attach_Revisione), new Action<Revisione>(this.detach_Revisione));
			this._Riparazione = new EntitySet<Riparazione>(new Action<Riparazione>(this.attach_Riparazione), new Action<Riparazione>(this.detach_Riparazione));
			this._ContrattoVendita = default(EntityRef<ContrattoVendita>);
			this._VeicoloCatalogo1 = default(EntityRef<VeicoloCatalogo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public decimal Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telaio", DbType="Char(17)")]
		public string Telaio
		{
			get
			{
				return this._Telaio;
			}
			set
			{
				if ((this._Telaio != value))
				{
					this.OnTelaioChanging(value);
					this.SendPropertyChanging();
					this._Telaio = value;
					this.SendPropertyChanged("Telaio");
					this.OnTelaioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contratto", DbType="Decimal(18,0) NOT NULL")]
		public decimal Contratto
		{
			get
			{
				return this._Contratto;
			}
			set
			{
				if ((this._Contratto != value))
				{
					if (this._ContrattoVendita.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContrattoChanging(value);
					this.SendPropertyChanging();
					this._Contratto = value;
					this.SendPropertyChanged("Contratto");
					this.OnContrattoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VeicoloCatalogo", DbType="Char(6) NOT NULL", CanBeNull=false)]
		public string VeicoloCatalogo
		{
			get
			{
				return this._VeicoloCatalogo;
			}
			set
			{
				if ((this._VeicoloCatalogo != value))
				{
					if (this._VeicoloCatalogo1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVeicoloCatalogoChanging(value);
					this.SendPropertyChanging();
					this._VeicoloCatalogo = value;
					this.SendPropertyChanged("VeicoloCatalogo");
					this.OnVeicoloCatalogoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VeicoloVenduto_Dotazione", Storage="_Dotazione", ThisKey="Id", OtherKey="Veicolo")]
		public EntitySet<Dotazione> Dotazione
		{
			get
			{
				return this._Dotazione;
			}
			set
			{
				this._Dotazione.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VeicoloVenduto_OrdineVeicolo", Storage="_OrdineVeicolo", ThisKey="Id", OtherKey="Veicolo", IsUnique=true, IsForeignKey=false)]
		public OrdineVeicolo OrdineVeicolo
		{
			get
			{
				return this._OrdineVeicolo.Entity;
			}
			set
			{
				OrdineVeicolo previousValue = this._OrdineVeicolo.Entity;
				if (((previousValue != value) 
							|| (this._OrdineVeicolo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OrdineVeicolo.Entity = null;
						previousValue.VeicoloVenduto = null;
					}
					this._OrdineVeicolo.Entity = value;
					if ((value != null))
					{
						value.VeicoloVenduto = this;
					}
					this.SendPropertyChanged("OrdineVeicolo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VeicoloVenduto_Revisione", Storage="_Revisione", ThisKey="Id", OtherKey="VeicoloVenduto")]
		public EntitySet<Revisione> Revisione
		{
			get
			{
				return this._Revisione;
			}
			set
			{
				this._Revisione.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VeicoloVenduto_Riparazione", Storage="_Riparazione", ThisKey="Id", OtherKey="Veicolo")]
		public EntitySet<Riparazione> Riparazione
		{
			get
			{
				return this._Riparazione;
			}
			set
			{
				this._Riparazione.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ContrattoVendita_VeicoloVenduto", Storage="_ContrattoVendita", ThisKey="Contratto", OtherKey="Numero", IsForeignKey=true)]
		public ContrattoVendita ContrattoVendita
		{
			get
			{
				return this._ContrattoVendita.Entity;
			}
			set
			{
				ContrattoVendita previousValue = this._ContrattoVendita.Entity;
				if (((previousValue != value) 
							|| (this._ContrattoVendita.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ContrattoVendita.Entity = null;
						previousValue.VeicoloVenduto.Remove(this);
					}
					this._ContrattoVendita.Entity = value;
					if ((value != null))
					{
						value.VeicoloVenduto.Add(this);
						this._Contratto = value.Numero;
					}
					else
					{
						this._Contratto = default(decimal);
					}
					this.SendPropertyChanged("ContrattoVendita");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VeicoloCatalogo_VeicoloVenduto", Storage="_VeicoloCatalogo1", ThisKey="VeicoloCatalogo", OtherKey="Codice", IsForeignKey=true)]
		public VeicoloCatalogo VeicoloCatalogo1
		{
			get
			{
				return this._VeicoloCatalogo1.Entity;
			}
			set
			{
				VeicoloCatalogo previousValue = this._VeicoloCatalogo1.Entity;
				if (((previousValue != value) 
							|| (this._VeicoloCatalogo1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._VeicoloCatalogo1.Entity = null;
						previousValue.VeicoloVenduto.Remove(this);
					}
					this._VeicoloCatalogo1.Entity = value;
					if ((value != null))
					{
						value.VeicoloVenduto.Add(this);
						this._VeicoloCatalogo = value.Codice;
					}
					else
					{
						this._VeicoloCatalogo = default(string);
					}
					this.SendPropertyChanged("VeicoloCatalogo1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Dotazione(Dotazione entity)
		{
			this.SendPropertyChanging();
			entity.VeicoloVenduto = this;
		}
		
		private void detach_Dotazione(Dotazione entity)
		{
			this.SendPropertyChanging();
			entity.VeicoloVenduto = null;
		}
		
		private void attach_Revisione(Revisione entity)
		{
			this.SendPropertyChanging();
			entity.VeicoloVenduto1 = this;
		}
		
		private void detach_Revisione(Revisione entity)
		{
			this.SendPropertyChanging();
			entity.VeicoloVenduto1 = null;
		}
		
		private void attach_Riparazione(Riparazione entity)
		{
			this.SendPropertyChanging();
			entity.VeicoloVenduto = this;
		}
		
		private void detach_Riparazione(Riparazione entity)
		{
			this.SendPropertyChanging();
			entity.VeicoloVenduto = null;
		}
	}
}
#pragma warning restore 1591
